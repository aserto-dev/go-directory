// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: aserto/directory/v2/directory.proto

package directory

import (
	v11 "github.com/aserto-dev/go-grpc/aserto/api/v1"
	v1 "github.com/aserto-dev/go-grpc/aserto/common/info/v1"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Opcode int32

const (
	Opcode_OPCODE_UNKNOWN Opcode = 0
	Opcode_OPCODE_SET     Opcode = 1
	Opcode_OPCODE_DELETE  Opcode = 2
)

// Enum value maps for Opcode.
var (
	Opcode_name = map[int32]string{
		0: "OPCODE_UNKNOWN",
		1: "OPCODE_SET",
		2: "OPCODE_DELETE",
	}
	Opcode_value = map[string]int32{
		"OPCODE_UNKNOWN": 0,
		"OPCODE_SET":     1,
		"OPCODE_DELETE":  2,
	}
)

func (x Opcode) Enum() *Opcode {
	p := new(Opcode)
	*p = x
	return p
}

func (x Opcode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Opcode) Descriptor() protoreflect.EnumDescriptor {
	return file_aserto_directory_v2_directory_proto_enumTypes[0].Descriptor()
}

func (Opcode) Type() protoreflect.EnumType {
	return &file_aserto_directory_v2_directory_proto_enumTypes[0]
}

func (x Opcode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Opcode.Descriptor instead.
func (Opcode) EnumDescriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{0}
}

type InfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InfoRequest) Reset() {
	*x = InfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoRequest) ProtoMessage() {}

func (x *InfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoRequest.ProtoReflect.Descriptor instead.
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{0}
}

type InfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Build *v1.BuildInfo `protobuf:"bytes,3,opt,name=build,proto3" json:"build,omitempty"` //
}

func (x *InfoResponse) Reset() {
	*x = InfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResponse) ProtoMessage() {}

func (x *InfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResponse.ProtoReflect.Descriptor instead.
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{1}
}

func (x *InfoResponse) GetBuild() *v1.BuildInfo {
	if x != nil {
		return x.Build
	}
	return nil
}

type LoaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpCode Opcode `protobuf:"varint,1,opt,name=op_code,json=opCode,proto3,enum=aserto.directory.v2.Opcode" json:"op_code,omitempty"` //
	// Types that are assignable to MsgOneof:
	//	*LoaderRequest_Object
	//	*LoaderRequest_ObjectType
	//	*LoaderRequest_Relation
	//	*LoaderRequest_RelationType
	//	*LoaderRequest_Permission
	//	*LoaderRequest_RelationTypePermission
	MsgOneof isLoaderRequest_MsgOneof `protobuf_oneof:"msg_oneof"`
}

func (x *LoaderRequest) Reset() {
	*x = LoaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoaderRequest) ProtoMessage() {}

func (x *LoaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoaderRequest.ProtoReflect.Descriptor instead.
func (*LoaderRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{2}
}

func (x *LoaderRequest) GetOpCode() Opcode {
	if x != nil {
		return x.OpCode
	}
	return Opcode_OPCODE_UNKNOWN
}

func (m *LoaderRequest) GetMsgOneof() isLoaderRequest_MsgOneof {
	if m != nil {
		return m.MsgOneof
	}
	return nil
}

func (x *LoaderRequest) GetObject() *Object {
	if x, ok := x.GetMsgOneof().(*LoaderRequest_Object); ok {
		return x.Object
	}
	return nil
}

func (x *LoaderRequest) GetObjectType() *ObjectType {
	if x, ok := x.GetMsgOneof().(*LoaderRequest_ObjectType); ok {
		return x.ObjectType
	}
	return nil
}

func (x *LoaderRequest) GetRelation() *Relation {
	if x, ok := x.GetMsgOneof().(*LoaderRequest_Relation); ok {
		return x.Relation
	}
	return nil
}

func (x *LoaderRequest) GetRelationType() *RelationType {
	if x, ok := x.GetMsgOneof().(*LoaderRequest_RelationType); ok {
		return x.RelationType
	}
	return nil
}

func (x *LoaderRequest) GetPermission() *Permission {
	if x, ok := x.GetMsgOneof().(*LoaderRequest_Permission); ok {
		return x.Permission
	}
	return nil
}

func (x *LoaderRequest) GetRelationTypePermission() *RelationTypePermission {
	if x, ok := x.GetMsgOneof().(*LoaderRequest_RelationTypePermission); ok {
		return x.RelationTypePermission
	}
	return nil
}

type isLoaderRequest_MsgOneof interface {
	isLoaderRequest_MsgOneof()
}

type LoaderRequest_Object struct {
	Object *Object `protobuf:"bytes,2,opt,name=object,proto3,oneof"` //
}

type LoaderRequest_ObjectType struct {
	ObjectType *ObjectType `protobuf:"bytes,3,opt,name=object_type,json=objectType,proto3,oneof"` //
}

type LoaderRequest_Relation struct {
	Relation *Relation `protobuf:"bytes,4,opt,name=relation,proto3,oneof"` //
}

type LoaderRequest_RelationType struct {
	RelationType *RelationType `protobuf:"bytes,5,opt,name=relation_type,json=relationType,proto3,oneof"` //
}

type LoaderRequest_Permission struct {
	Permission *Permission `protobuf:"bytes,6,opt,name=permission,proto3,oneof"` //
}

type LoaderRequest_RelationTypePermission struct {
	RelationTypePermission *RelationTypePermission `protobuf:"bytes,7,opt,name=relation_type_permission,json=relationTypePermission,proto3,oneof"`
}

func (*LoaderRequest_Object) isLoaderRequest_MsgOneof() {}

func (*LoaderRequest_ObjectType) isLoaderRequest_MsgOneof() {}

func (*LoaderRequest_Relation) isLoaderRequest_MsgOneof() {}

func (*LoaderRequest_RelationType) isLoaderRequest_MsgOneof() {}

func (*LoaderRequest_Permission) isLoaderRequest_MsgOneof() {}

func (*LoaderRequest_RelationTypePermission) isLoaderRequest_MsgOneof() {}

type LoaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *status.Status `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` //
}

func (x *LoaderResponse) Reset() {
	*x = LoaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoaderResponse) ProtoMessage() {}

func (x *LoaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoaderResponse.ProtoReflect.Descriptor instead.
func (*LoaderResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{3}
}

func (x *LoaderResponse) GetError() *status.Status {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetObjectTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Param:
	//	*GetObjectTypeRequest_Id
	//	*GetObjectTypeRequest_Name
	Param isGetObjectTypeRequest_Param `protobuf_oneof:"param"`
}

func (x *GetObjectTypeRequest) Reset() {
	*x = GetObjectTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectTypeRequest) ProtoMessage() {}

func (x *GetObjectTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectTypeRequest.ProtoReflect.Descriptor instead.
func (*GetObjectTypeRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{4}
}

func (m *GetObjectTypeRequest) GetParam() isGetObjectTypeRequest_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (x *GetObjectTypeRequest) GetId() int32 {
	if x, ok := x.GetParam().(*GetObjectTypeRequest_Id); ok {
		return x.Id
	}
	return 0
}

func (x *GetObjectTypeRequest) GetName() string {
	if x, ok := x.GetParam().(*GetObjectTypeRequest_Name); ok {
		return x.Name
	}
	return ""
}

type isGetObjectTypeRequest_Param interface {
	isGetObjectTypeRequest_Param()
}

type GetObjectTypeRequest_Id struct {
	Id int32 `protobuf:"varint,1,opt,name=id,proto3,oneof"` // object type ID
}

type GetObjectTypeRequest_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,proto3,oneof"` // object type name (unique)
}

func (*GetObjectTypeRequest_Id) isGetObjectTypeRequest_Param() {}

func (*GetObjectTypeRequest_Name) isGetObjectTypeRequest_Param() {}

type GetObjectTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ObjectType `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` //
}

func (x *GetObjectTypeResponse) Reset() {
	*x = GetObjectTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectTypeResponse) ProtoMessage() {}

func (x *GetObjectTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectTypeResponse.ProtoReflect.Descriptor instead.
func (*GetObjectTypeResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{5}
}

func (x *GetObjectTypeResponse) GetResults() []*ObjectType {
	if x != nil {
		return x.Results
	}
	return nil
}

type SetObjectTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectType *ObjectType `protobuf:"bytes,1,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"` //
}

func (x *SetObjectTypeRequest) Reset() {
	*x = SetObjectTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetObjectTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetObjectTypeRequest) ProtoMessage() {}

func (x *SetObjectTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetObjectTypeRequest.ProtoReflect.Descriptor instead.
func (*SetObjectTypeRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{6}
}

func (x *SetObjectTypeRequest) GetObjectType() *ObjectType {
	if x != nil {
		return x.ObjectType
	}
	return nil
}

type SetObjectTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ObjectType `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` //
}

func (x *SetObjectTypeResponse) Reset() {
	*x = SetObjectTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetObjectTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetObjectTypeResponse) ProtoMessage() {}

func (x *SetObjectTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetObjectTypeResponse.ProtoReflect.Descriptor instead.
func (*SetObjectTypeResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{7}
}

func (x *SetObjectTypeResponse) GetResults() []*ObjectType {
	if x != nil {
		return x.Results
	}
	return nil
}

type DeleteObjectTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Param:
	//	*DeleteObjectTypeRequest_Id
	//	*DeleteObjectTypeRequest_Name
	Param isDeleteObjectTypeRequest_Param `protobuf_oneof:"param"`
}

func (x *DeleteObjectTypeRequest) Reset() {
	*x = DeleteObjectTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteObjectTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteObjectTypeRequest) ProtoMessage() {}

func (x *DeleteObjectTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteObjectTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteObjectTypeRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{8}
}

func (m *DeleteObjectTypeRequest) GetParam() isDeleteObjectTypeRequest_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (x *DeleteObjectTypeRequest) GetId() int32 {
	if x, ok := x.GetParam().(*DeleteObjectTypeRequest_Id); ok {
		return x.Id
	}
	return 0
}

func (x *DeleteObjectTypeRequest) GetName() string {
	if x, ok := x.GetParam().(*DeleteObjectTypeRequest_Name); ok {
		return x.Name
	}
	return ""
}

type isDeleteObjectTypeRequest_Param interface {
	isDeleteObjectTypeRequest_Param()
}

type DeleteObjectTypeRequest_Id struct {
	Id int32 `protobuf:"varint,1,opt,name=id,proto3,oneof"` // object type ID
}

type DeleteObjectTypeRequest_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,proto3,oneof"` // object type name (unique)
}

func (*DeleteObjectTypeRequest_Id) isDeleteObjectTypeRequest_Param() {}

func (*DeleteObjectTypeRequest_Name) isDeleteObjectTypeRequest_Param() {}

type DeleteObjectTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *emptypb.Empty `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` //
}

func (x *DeleteObjectTypeResponse) Reset() {
	*x = DeleteObjectTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteObjectTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteObjectTypeResponse) ProtoMessage() {}

func (x *DeleteObjectTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteObjectTypeResponse.ProtoReflect.Descriptor instead.
func (*DeleteObjectTypeResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteObjectTypeResponse) GetResult() *emptypb.Empty {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListObjectTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *v11.PaginationRequest `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"` // pagination request
}

func (x *ListObjectTypesRequest) Reset() {
	*x = ListObjectTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectTypesRequest) ProtoMessage() {}

func (x *ListObjectTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectTypesRequest.ProtoReflect.Descriptor instead.
func (*ListObjectTypesRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{10}
}

func (x *ListObjectTypesRequest) GetPage() *v11.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListObjectTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ObjectType           `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` // array of object types
	Page    *v11.PaginationResponse `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`       // pagination response
}

func (x *ListObjectTypesResponse) Reset() {
	*x = ListObjectTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectTypesResponse) ProtoMessage() {}

func (x *ListObjectTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectTypesResponse.ProtoReflect.Descriptor instead.
func (*ListObjectTypesResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{11}
}

func (x *ListObjectTypesResponse) GetResults() []*ObjectType {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ListObjectTypesResponse) GetPage() *v11.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetObjTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // object type name (unique)
}

func (x *GetObjTypeRequest) Reset() {
	*x = GetObjTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjTypeRequest) ProtoMessage() {}

func (x *GetObjTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjTypeRequest.ProtoReflect.Descriptor instead.
func (*GetObjTypeRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{12}
}

func (x *GetObjTypeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetObjTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // object type id
}

func (x *GetObjTypeResponse) Reset() {
	*x = GetObjTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjTypeResponse) ProtoMessage() {}

func (x *GetObjTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjTypeResponse.ProtoReflect.Descriptor instead.
func (*GetObjTypeResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{13}
}

func (x *GetObjTypeResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetRelationTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Param:
	//	*GetRelationTypeRequest_Id
	//	*GetRelationTypeRequest_Key
	Param isGetRelationTypeRequest_Param `protobuf_oneof:"param"`
}

func (x *GetRelationTypeRequest) Reset() {
	*x = GetRelationTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelationTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelationTypeRequest) ProtoMessage() {}

func (x *GetRelationTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelationTypeRequest.ProtoReflect.Descriptor instead.
func (*GetRelationTypeRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{14}
}

func (m *GetRelationTypeRequest) GetParam() isGetRelationTypeRequest_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (x *GetRelationTypeRequest) GetId() int32 {
	if x, ok := x.GetParam().(*GetRelationTypeRequest_Id); ok {
		return x.Id
	}
	return 0
}

func (x *GetRelationTypeRequest) GetKey() *RelationTypeKey {
	if x, ok := x.GetParam().(*GetRelationTypeRequest_Key); ok {
		return x.Key
	}
	return nil
}

type isGetRelationTypeRequest_Param interface {
	isGetRelationTypeRequest_Param()
}

type GetRelationTypeRequest_Id struct {
	Id int32 `protobuf:"varint,1,opt,name=id,proto3,oneof"` // relation type ID
}

type GetRelationTypeRequest_Key struct {
	Key *RelationTypeKey `protobuf:"bytes,3,opt,name=key,proto3,oneof"` // object_type+name
}

func (*GetRelationTypeRequest_Id) isGetRelationTypeRequest_Param() {}

func (*GetRelationTypeRequest_Key) isGetRelationTypeRequest_Param() {}

type GetRelationTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*RelationType `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` //
}

func (x *GetRelationTypeResponse) Reset() {
	*x = GetRelationTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelationTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelationTypeResponse) ProtoMessage() {}

func (x *GetRelationTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelationTypeResponse.ProtoReflect.Descriptor instead.
func (*GetRelationTypeResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{15}
}

func (x *GetRelationTypeResponse) GetResults() []*RelationType {
	if x != nil {
		return x.Results
	}
	return nil
}

type SetRelationTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelationType *RelationType `protobuf:"bytes,1,opt,name=relation_type,json=relationType,proto3" json:"relation_type,omitempty"` //
}

func (x *SetRelationTypeRequest) Reset() {
	*x = SetRelationTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRelationTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRelationTypeRequest) ProtoMessage() {}

func (x *SetRelationTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRelationTypeRequest.ProtoReflect.Descriptor instead.
func (*SetRelationTypeRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{16}
}

func (x *SetRelationTypeRequest) GetRelationType() *RelationType {
	if x != nil {
		return x.RelationType
	}
	return nil
}

type SetRelationTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*RelationType `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` //
}

func (x *SetRelationTypeResponse) Reset() {
	*x = SetRelationTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRelationTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRelationTypeResponse) ProtoMessage() {}

func (x *SetRelationTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRelationTypeResponse.ProtoReflect.Descriptor instead.
func (*SetRelationTypeResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{17}
}

func (x *SetRelationTypeResponse) GetResults() []*RelationType {
	if x != nil {
		return x.Results
	}
	return nil
}

type DeleteRelationTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Param:
	//	*DeleteRelationTypeRequest_Id
	//	*DeleteRelationTypeRequest_Key
	Param isDeleteRelationTypeRequest_Param `protobuf_oneof:"param"`
}

func (x *DeleteRelationTypeRequest) Reset() {
	*x = DeleteRelationTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRelationTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRelationTypeRequest) ProtoMessage() {}

func (x *DeleteRelationTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRelationTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteRelationTypeRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{18}
}

func (m *DeleteRelationTypeRequest) GetParam() isDeleteRelationTypeRequest_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (x *DeleteRelationTypeRequest) GetId() int32 {
	if x, ok := x.GetParam().(*DeleteRelationTypeRequest_Id); ok {
		return x.Id
	}
	return 0
}

func (x *DeleteRelationTypeRequest) GetKey() *RelationTypeKey {
	if x, ok := x.GetParam().(*DeleteRelationTypeRequest_Key); ok {
		return x.Key
	}
	return nil
}

type isDeleteRelationTypeRequest_Param interface {
	isDeleteRelationTypeRequest_Param()
}

type DeleteRelationTypeRequest_Id struct {
	Id int32 `protobuf:"varint,1,opt,name=id,proto3,oneof"` // relation type ID
}

type DeleteRelationTypeRequest_Key struct {
	Key *RelationTypeKey `protobuf:"bytes,2,opt,name=key,proto3,oneof"` // object_type + relation type name (unique)
}

func (*DeleteRelationTypeRequest_Id) isDeleteRelationTypeRequest_Param() {}

func (*DeleteRelationTypeRequest_Key) isDeleteRelationTypeRequest_Param() {}

type DeleteRelationTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *emptypb.Empty `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` //
}

func (x *DeleteRelationTypeResponse) Reset() {
	*x = DeleteRelationTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRelationTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRelationTypeResponse) ProtoMessage() {}

func (x *DeleteRelationTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRelationTypeResponse.ProtoReflect.Descriptor instead.
func (*DeleteRelationTypeResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteRelationTypeResponse) GetResult() *emptypb.Empty {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListRelationTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectType *int32                 `protobuf:"varint,1,opt,name=object_type,json=objectType,proto3,oneof" json:"object_type,omitempty"` // optional object type filter
	Page       *v11.PaginationRequest `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`                                      // pagination request
}

func (x *ListRelationTypesRequest) Reset() {
	*x = ListRelationTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelationTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelationTypesRequest) ProtoMessage() {}

func (x *ListRelationTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelationTypesRequest.ProtoReflect.Descriptor instead.
func (*ListRelationTypesRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{20}
}

func (x *ListRelationTypesRequest) GetObjectType() int32 {
	if x != nil && x.ObjectType != nil {
		return *x.ObjectType
	}
	return 0
}

func (x *ListRelationTypesRequest) GetPage() *v11.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListRelationTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*RelationType         `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` // array of relation types
	Page    *v11.PaginationResponse `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`       // pagination response
}

func (x *ListRelationTypesResponse) Reset() {
	*x = ListRelationTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelationTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelationTypesResponse) ProtoMessage() {}

func (x *ListRelationTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelationTypesResponse.ProtoReflect.Descriptor instead.
func (*ListRelationTypesResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{21}
}

func (x *ListRelationTypesResponse) GetResults() []*RelationType {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ListRelationTypesResponse) GetPage() *v11.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetRelTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                               // relation name (unique object_type+name)
	ObjectType string `protobuf:"bytes,2,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"` // object type referenced by relation (on the left hand side)
}

func (x *GetRelTypeRequest) Reset() {
	*x = GetRelTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelTypeRequest) ProtoMessage() {}

func (x *GetRelTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelTypeRequest.ProtoReflect.Descriptor instead.
func (*GetRelTypeRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{22}
}

func (x *GetRelTypeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetRelTypeRequest) GetObjectType() string {
	if x != nil {
		return x.ObjectType
	}
	return ""
}

type GetRelTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //
}

func (x *GetRelTypeResponse) Reset() {
	*x = GetRelTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelTypeResponse) ProtoMessage() {}

func (x *GetRelTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelTypeResponse.ProtoReflect.Descriptor instead.
func (*GetRelTypeResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{23}
}

func (x *GetRelTypeResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Param:
	//	*GetObjectRequest_Id
	//	*GetObjectRequest_Key
	Param isGetObjectRequest_Param `protobuf_oneof:"param"`
}

func (x *GetObjectRequest) Reset() {
	*x = GetObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectRequest) ProtoMessage() {}

func (x *GetObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectRequest.ProtoReflect.Descriptor instead.
func (*GetObjectRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{24}
}

func (m *GetObjectRequest) GetParam() isGetObjectRequest_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (x *GetObjectRequest) GetId() string {
	if x, ok := x.GetParam().(*GetObjectRequest_Id); ok {
		return x.Id
	}
	return ""
}

func (x *GetObjectRequest) GetKey() *ObjectKey {
	if x, ok := x.GetParam().(*GetObjectRequest_Key); ok {
		return x.Key
	}
	return nil
}

type isGetObjectRequest_Param interface {
	isGetObjectRequest_Param()
}

type GetObjectRequest_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3,oneof"` // ID (uuid)
}

type GetObjectRequest_Key struct {
	Key *ObjectKey `protobuf:"bytes,4,opt,name=key,proto3,oneof"` // external key/ID (case-sensistive)
}

func (*GetObjectRequest_Id) isGetObjectRequest_Param() {}

func (*GetObjectRequest_Key) isGetObjectRequest_Param() {}

type GetObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Object `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` //
}

func (x *GetObjectResponse) Reset() {
	*x = GetObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectResponse) ProtoMessage() {}

func (x *GetObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectResponse.ProtoReflect.Descriptor instead.
func (*GetObjectResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{25}
}

func (x *GetObjectResponse) GetResults() []*Object {
	if x != nil {
		return x.Results
	}
	return nil
}

type SetObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Object *Object `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"` //
}

func (x *SetObjectRequest) Reset() {
	*x = SetObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetObjectRequest) ProtoMessage() {}

func (x *SetObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetObjectRequest.ProtoReflect.Descriptor instead.
func (*SetObjectRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{26}
}

func (x *SetObjectRequest) GetObject() *Object {
	if x != nil {
		return x.Object
	}
	return nil
}

type SetObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Object `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` //
}

func (x *SetObjectResponse) Reset() {
	*x = SetObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetObjectResponse) ProtoMessage() {}

func (x *SetObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetObjectResponse.ProtoReflect.Descriptor instead.
func (*SetObjectResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{27}
}

func (x *SetObjectResponse) GetResults() []*Object {
	if x != nil {
		return x.Results
	}
	return nil
}

type DeleteObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Param:
	//	*DeleteObjectRequest_Id
	//	*DeleteObjectRequest_Key
	Param isDeleteObjectRequest_Param `protobuf_oneof:"param"`
}

func (x *DeleteObjectRequest) Reset() {
	*x = DeleteObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteObjectRequest) ProtoMessage() {}

func (x *DeleteObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteObjectRequest.ProtoReflect.Descriptor instead.
func (*DeleteObjectRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{28}
}

func (m *DeleteObjectRequest) GetParam() isDeleteObjectRequest_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (x *DeleteObjectRequest) GetId() string {
	if x, ok := x.GetParam().(*DeleteObjectRequest_Id); ok {
		return x.Id
	}
	return ""
}

func (x *DeleteObjectRequest) GetKey() *ObjectKey {
	if x, ok := x.GetParam().(*DeleteObjectRequest_Key); ok {
		return x.Key
	}
	return nil
}

type isDeleteObjectRequest_Param interface {
	isDeleteObjectRequest_Param()
}

type DeleteObjectRequest_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3,oneof"` // ID (uuid)
}

type DeleteObjectRequest_Key struct {
	Key *ObjectKey `protobuf:"bytes,4,opt,name=key,proto3,oneof"` // external key/ID (case-sensistive)
}

func (*DeleteObjectRequest_Id) isDeleteObjectRequest_Param() {}

func (*DeleteObjectRequest_Key) isDeleteObjectRequest_Param() {}

type DeleteObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *emptypb.Empty `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` //
}

func (x *DeleteObjectResponse) Reset() {
	*x = DeleteObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteObjectResponse) ProtoMessage() {}

func (x *DeleteObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteObjectResponse.ProtoReflect.Descriptor instead.
func (*DeleteObjectResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteObjectResponse) GetResult() *emptypb.Empty {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListObjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *int32                 `protobuf:"varint,1,opt,name=type,proto3,oneof" json:"type,omitempty"` // object tyoe filter (OPTIONAL)
	Page *v11.PaginationRequest `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`        // pagination request
}

func (x *ListObjectsRequest) Reset() {
	*x = ListObjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectsRequest) ProtoMessage() {}

func (x *ListObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectsRequest.ProtoReflect.Descriptor instead.
func (*ListObjectsRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{30}
}

func (x *ListObjectsRequest) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ListObjectsRequest) GetPage() *v11.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListObjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results *Object `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"` //
}

func (x *ListObjectsResponse) Reset() {
	*x = ListObjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectsResponse) ProtoMessage() {}

func (x *ListObjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectsResponse.ProtoReflect.Descriptor instead.
func (*ListObjectsResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{31}
}

func (x *ListObjectsResponse) GetResults() *Object {
	if x != nil {
		return x.Results
	}
	return nil
}

type GetObjRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeName string `protobuf:"bytes,2,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"` // object type name
	Value    string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`                       // external key/ID (case-sensistive)
}

func (x *GetObjRequest) Reset() {
	*x = GetObjRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjRequest) ProtoMessage() {}

func (x *GetObjRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjRequest.ProtoReflect.Descriptor instead.
func (*GetObjRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{32}
}

func (x *GetObjRequest) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *GetObjRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetObjResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Object `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` //
}

func (x *GetObjResponse) Reset() {
	*x = GetObjResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjResponse) ProtoMessage() {}

func (x *GetObjResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjResponse.ProtoReflect.Descriptor instead.
func (*GetObjResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{33}
}

func (x *GetObjResponse) GetResults() []*Object {
	if x != nil {
		return x.Results
	}
	return nil
}

type GetRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceType int32  `protobuf:"varint,1,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"` // source object type ID (OPTIONAL)
	SourceId   string `protobuf:"bytes,2,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`        // source object ID (UUID)
	Relation   int32  `protobuf:"varint,3,opt,name=relation,proto3" json:"relation,omitempty"`                       // relation type ID
	TargetType int32  `protobuf:"varint,4,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"` // target object type ID (OPTIONAL)
	TargetId   string `protobuf:"bytes,5,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`        // target object ID (UUID)
}

func (x *GetRelationRequest) Reset() {
	*x = GetRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelationRequest) ProtoMessage() {}

func (x *GetRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelationRequest.ProtoReflect.Descriptor instead.
func (*GetRelationRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{34}
}

func (x *GetRelationRequest) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *GetRelationRequest) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *GetRelationRequest) GetRelation() int32 {
	if x != nil {
		return x.Relation
	}
	return 0
}

func (x *GetRelationRequest) GetTargetType() int32 {
	if x != nil {
		return x.TargetType
	}
	return 0
}

func (x *GetRelationRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type GetRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Relation `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` //
}

func (x *GetRelationResponse) Reset() {
	*x = GetRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelationResponse) ProtoMessage() {}

func (x *GetRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelationResponse.ProtoReflect.Descriptor instead.
func (*GetRelationResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{35}
}

func (x *GetRelationResponse) GetResults() []*Relation {
	if x != nil {
		return x.Results
	}
	return nil
}

type SetRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relation *Relation `protobuf:"bytes,1,opt,name=relation,proto3" json:"relation,omitempty"` //
}

func (x *SetRelationRequest) Reset() {
	*x = SetRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRelationRequest) ProtoMessage() {}

func (x *SetRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRelationRequest.ProtoReflect.Descriptor instead.
func (*SetRelationRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{36}
}

func (x *SetRelationRequest) GetRelation() *Relation {
	if x != nil {
		return x.Relation
	}
	return nil
}

type SetRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Relation `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` //
}

func (x *SetRelationResponse) Reset() {
	*x = SetRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRelationResponse) ProtoMessage() {}

func (x *SetRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRelationResponse.ProtoReflect.Descriptor instead.
func (*SetRelationResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{37}
}

func (x *SetRelationResponse) GetResults() []*Relation {
	if x != nil {
		return x.Results
	}
	return nil
}

type DeleteRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceType int32  `protobuf:"varint,1,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"` // source object type ID (OPTIONAL)
	SourceId   string `protobuf:"bytes,2,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`        // source object ID (UUID)
	Relation   int32  `protobuf:"varint,3,opt,name=relation,proto3" json:"relation,omitempty"`                       // relation type ID
	TargetType int32  `protobuf:"varint,4,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"` // target object type ID (OPTIONAL)
	TargetId   string `protobuf:"bytes,5,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`        // target object ID (UUID)
}

func (x *DeleteRelationRequest) Reset() {
	*x = DeleteRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRelationRequest) ProtoMessage() {}

func (x *DeleteRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRelationRequest.ProtoReflect.Descriptor instead.
func (*DeleteRelationRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteRelationRequest) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *DeleteRelationRequest) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *DeleteRelationRequest) GetRelation() int32 {
	if x != nil {
		return x.Relation
	}
	return 0
}

func (x *DeleteRelationRequest) GetTargetType() int32 {
	if x != nil {
		return x.TargetType
	}
	return 0
}

func (x *DeleteRelationRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type DeleteRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *emptypb.Empty `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` //
}

func (x *DeleteRelationResponse) Reset() {
	*x = DeleteRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRelationResponse) ProtoMessage() {}

func (x *DeleteRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRelationResponse.ProtoReflect.Descriptor instead.
func (*DeleteRelationResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteRelationResponse) GetResult() *emptypb.Empty {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListRelationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceType int32                  `protobuf:"varint,1,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"` // source object type ID
	SourceId   string                 `protobuf:"bytes,2,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`        // source object ID (UUID)
	Relation   int32                  `protobuf:"varint,3,opt,name=relation,proto3" json:"relation,omitempty"`                       // relation type ID
	TargetType int32                  `protobuf:"varint,4,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"` // target object type ID
	TargetId   string                 `protobuf:"bytes,5,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`        // target object ID (UUID)
	Page       *v11.PaginationRequest `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`                                // pagination request
}

func (x *ListRelationsRequest) Reset() {
	*x = ListRelationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelationsRequest) ProtoMessage() {}

func (x *ListRelationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelationsRequest.ProtoReflect.Descriptor instead.
func (*ListRelationsRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{40}
}

func (x *ListRelationsRequest) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *ListRelationsRequest) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *ListRelationsRequest) GetRelation() int32 {
	if x != nil {
		return x.Relation
	}
	return 0
}

func (x *ListRelationsRequest) GetTargetType() int32 {
	if x != nil {
		return x.TargetType
	}
	return 0
}

func (x *ListRelationsRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *ListRelationsRequest) GetPage() *v11.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListRelationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Relation             `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` // results array of relations
	Page    *v11.PaginationResponse `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`       // pagination response
}

func (x *ListRelationsResponse) Reset() {
	*x = ListRelationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelationsResponse) ProtoMessage() {}

func (x *ListRelationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelationsResponse.ProtoReflect.Descriptor instead.
func (*ListRelationsResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{41}
}

func (x *ListRelationsResponse) GetResults() []*Relation {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ListRelationsResponse) GetPage() *v11.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetRelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceType string `protobuf:"bytes,1,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"` // source object type name (OPTIONAL)
	SourceId   string `protobuf:"bytes,2,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`       // source object ID (UUID)
	Relation   string `protobuf:"bytes,3,opt,name=relation,proto3" json:"relation,omitempty"`                       // relation type name
	TargetType string `protobuf:"bytes,4,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"` // target object type IDname (OPTIONAL)
	TargetId   string `protobuf:"bytes,5,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`       // target object ID (UUID)
}

func (x *GetRelRequest) Reset() {
	*x = GetRelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelRequest) ProtoMessage() {}

func (x *GetRelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelRequest.ProtoReflect.Descriptor instead.
func (*GetRelRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{42}
}

func (x *GetRelRequest) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

func (x *GetRelRequest) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *GetRelRequest) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *GetRelRequest) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *GetRelRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type GetRelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Relation `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` //
}

func (x *GetRelResponse) Reset() {
	*x = GetRelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelResponse) ProtoMessage() {}

func (x *GetRelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelResponse.ProtoReflect.Descriptor instead.
func (*GetRelResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{43}
}

func (x *GetRelResponse) GetResults() []*Relation {
	if x != nil {
		return x.Results
	}
	return nil
}

type GetPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Param:
	//	*GetPermissionRequest_Id
	//	*GetPermissionRequest_Permission
	Param isGetPermissionRequest_Param `protobuf_oneof:"param"`
}

func (x *GetPermissionRequest) Reset() {
	*x = GetPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionRequest) ProtoMessage() {}

func (x *GetPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionRequest.ProtoReflect.Descriptor instead.
func (*GetPermissionRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{44}
}

func (m *GetPermissionRequest) GetParam() isGetPermissionRequest_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (x *GetPermissionRequest) GetId() string {
	if x, ok := x.GetParam().(*GetPermissionRequest_Id); ok {
		return x.Id
	}
	return ""
}

func (x *GetPermissionRequest) GetPermission() string {
	if x, ok := x.GetParam().(*GetPermissionRequest_Permission); ok {
		return x.Permission
	}
	return ""
}

type isGetPermissionRequest_Param interface {
	isGetPermissionRequest_Param()
}

type GetPermissionRequest_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3,oneof"` // permission ID (UUID)
}

type GetPermissionRequest_Permission struct {
	Permission string `protobuf:"bytes,2,opt,name=permission,proto3,oneof"` // permission key (unique)
}

func (*GetPermissionRequest_Id) isGetPermissionRequest_Param() {}

func (*GetPermissionRequest_Permission) isGetPermissionRequest_Param() {}

type GetPermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Permission `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` //
}

func (x *GetPermissionResponse) Reset() {
	*x = GetPermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionResponse) ProtoMessage() {}

func (x *GetPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionResponse.ProtoReflect.Descriptor instead.
func (*GetPermissionResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{45}
}

func (x *GetPermissionResponse) GetResults() []*Permission {
	if x != nil {
		return x.Results
	}
	return nil
}

type SetPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permission *Permission `protobuf:"bytes,1,opt,name=permission,proto3" json:"permission,omitempty"` //
}

func (x *SetPermissionRequest) Reset() {
	*x = SetPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPermissionRequest) ProtoMessage() {}

func (x *SetPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPermissionRequest.ProtoReflect.Descriptor instead.
func (*SetPermissionRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{46}
}

func (x *SetPermissionRequest) GetPermission() *Permission {
	if x != nil {
		return x.Permission
	}
	return nil
}

type SetPermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Permission `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` //
}

func (x *SetPermissionResponse) Reset() {
	*x = SetPermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPermissionResponse) ProtoMessage() {}

func (x *SetPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPermissionResponse.ProtoReflect.Descriptor instead.
func (*SetPermissionResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{47}
}

func (x *SetPermissionResponse) GetResults() []*Permission {
	if x != nil {
		return x.Results
	}
	return nil
}

type DeletePermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Param:
	//	*DeletePermissionRequest_Id
	//	*DeletePermissionRequest_Permission
	Param isDeletePermissionRequest_Param `protobuf_oneof:"param"`
}

func (x *DeletePermissionRequest) Reset() {
	*x = DeletePermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePermissionRequest) ProtoMessage() {}

func (x *DeletePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePermissionRequest.ProtoReflect.Descriptor instead.
func (*DeletePermissionRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{48}
}

func (m *DeletePermissionRequest) GetParam() isDeletePermissionRequest_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (x *DeletePermissionRequest) GetId() string {
	if x, ok := x.GetParam().(*DeletePermissionRequest_Id); ok {
		return x.Id
	}
	return ""
}

func (x *DeletePermissionRequest) GetPermission() string {
	if x, ok := x.GetParam().(*DeletePermissionRequest_Permission); ok {
		return x.Permission
	}
	return ""
}

type isDeletePermissionRequest_Param interface {
	isDeletePermissionRequest_Param()
}

type DeletePermissionRequest_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3,oneof"` // permission ID (UUID)
}

type DeletePermissionRequest_Permission struct {
	Permission string `protobuf:"bytes,2,opt,name=permission,proto3,oneof"` // permission key (unique)
}

func (*DeletePermissionRequest_Id) isDeletePermissionRequest_Param() {}

func (*DeletePermissionRequest_Permission) isDeletePermissionRequest_Param() {}

type DeletePermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *emptypb.Empty `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` //
}

func (x *DeletePermissionResponse) Reset() {
	*x = DeletePermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePermissionResponse) ProtoMessage() {}

func (x *DeletePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePermissionResponse.ProtoReflect.Descriptor instead.
func (*DeletePermissionResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{49}
}

func (x *DeletePermissionResponse) GetResult() *emptypb.Empty {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListPermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *v11.PaginationRequest `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"` // pagination request
}

func (x *ListPermissionsRequest) Reset() {
	*x = ListPermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionsRequest) ProtoMessage() {}

func (x *ListPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionsRequest.ProtoReflect.Descriptor instead.
func (*ListPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{50}
}

func (x *ListPermissionsRequest) GetPage() *v11.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Permission           `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` // array of permissions
	Page    *v11.PaginationResponse `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`       // pagination response
}

func (x *ListPermissionsResponse) Reset() {
	*x = ListPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionsResponse) ProtoMessage() {}

func (x *ListPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionsResponse.ProtoReflect.Descriptor instead.
func (*ListPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{51}
}

func (x *ListPermissionsResponse) GetResults() []*Permission {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ListPermissionsResponse) GetPage() *v11.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetPermRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // permission name (unique)
}

func (x *GetPermRequest) Reset() {
	*x = GetPermRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermRequest) ProtoMessage() {}

func (x *GetPermRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermRequest.ProtoReflect.Descriptor instead.
func (*GetPermRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{52}
}

func (x *GetPermRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetPermResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // permission id (UUID)
}

func (x *GetPermResponse) Reset() {
	*x = GetPermResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermResponse) ProtoMessage() {}

func (x *GetPermResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermResponse.ProtoReflect.Descriptor instead.
func (*GetPermResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{53}
}

func (x *GetPermResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetRelationTypePermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelationId   int32  `protobuf:"varint,1,opt,name=relation_id,json=relationId,proto3" json:"relation_id,omitempty"`      //
	PermissionId string `protobuf:"bytes,2,opt,name=permission_id,json=permissionId,proto3" json:"permission_id,omitempty"` //
}

func (x *GetRelationTypePermissionRequest) Reset() {
	*x = GetRelationTypePermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelationTypePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelationTypePermissionRequest) ProtoMessage() {}

func (x *GetRelationTypePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelationTypePermissionRequest.ProtoReflect.Descriptor instead.
func (*GetRelationTypePermissionRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{54}
}

func (x *GetRelationTypePermissionRequest) GetRelationId() int32 {
	if x != nil {
		return x.RelationId
	}
	return 0
}

func (x *GetRelationTypePermissionRequest) GetPermissionId() string {
	if x != nil {
		return x.PermissionId
	}
	return ""
}

type GetRelationTypePermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*RelationTypePermission `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *GetRelationTypePermissionResponse) Reset() {
	*x = GetRelationTypePermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelationTypePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelationTypePermissionResponse) ProtoMessage() {}

func (x *GetRelationTypePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelationTypePermissionResponse.ProtoReflect.Descriptor instead.
func (*GetRelationTypePermissionResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{55}
}

func (x *GetRelationTypePermissionResponse) GetResults() []*RelationTypePermission {
	if x != nil {
		return x.Results
	}
	return nil
}

type SetRelationTypePermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelationTypePermission *RelationTypePermission `protobuf:"bytes,1,opt,name=relation_type_permission,json=relationTypePermission,proto3" json:"relation_type_permission,omitempty"`
}

func (x *SetRelationTypePermissionRequest) Reset() {
	*x = SetRelationTypePermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRelationTypePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRelationTypePermissionRequest) ProtoMessage() {}

func (x *SetRelationTypePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRelationTypePermissionRequest.ProtoReflect.Descriptor instead.
func (*SetRelationTypePermissionRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{56}
}

func (x *SetRelationTypePermissionRequest) GetRelationTypePermission() *RelationTypePermission {
	if x != nil {
		return x.RelationTypePermission
	}
	return nil
}

type SetRelationTypePermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*RelationTypePermission `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *SetRelationTypePermissionResponse) Reset() {
	*x = SetRelationTypePermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRelationTypePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRelationTypePermissionResponse) ProtoMessage() {}

func (x *SetRelationTypePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRelationTypePermissionResponse.ProtoReflect.Descriptor instead.
func (*SetRelationTypePermissionResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{57}
}

func (x *SetRelationTypePermissionResponse) GetResults() []*RelationTypePermission {
	if x != nil {
		return x.Results
	}
	return nil
}

type DeleteRelationTypePermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelationId   int32  `protobuf:"varint,1,opt,name=relation_id,json=relationId,proto3" json:"relation_id,omitempty"`      //
	PermissionId string `protobuf:"bytes,2,opt,name=permission_id,json=permissionId,proto3" json:"permission_id,omitempty"` //
}

func (x *DeleteRelationTypePermissionRequest) Reset() {
	*x = DeleteRelationTypePermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRelationTypePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRelationTypePermissionRequest) ProtoMessage() {}

func (x *DeleteRelationTypePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRelationTypePermissionRequest.ProtoReflect.Descriptor instead.
func (*DeleteRelationTypePermissionRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{58}
}

func (x *DeleteRelationTypePermissionRequest) GetRelationId() int32 {
	if x != nil {
		return x.RelationId
	}
	return 0
}

func (x *DeleteRelationTypePermissionRequest) GetPermissionId() string {
	if x != nil {
		return x.PermissionId
	}
	return ""
}

type DeleteRelationTypePermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *emptypb.Empty `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` //
}

func (x *DeleteRelationTypePermissionResponse) Reset() {
	*x = DeleteRelationTypePermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRelationTypePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRelationTypePermissionResponse) ProtoMessage() {}

func (x *DeleteRelationTypePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRelationTypePermissionResponse.ProtoReflect.Descriptor instead.
func (*DeleteRelationTypePermissionResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{59}
}

func (x *DeleteRelationTypePermissionResponse) GetResult() *emptypb.Empty {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListRelationTypePermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *v11.PaginationRequest `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"` // pagination request
}

func (x *ListRelationTypePermissionsRequest) Reset() {
	*x = ListRelationTypePermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelationTypePermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelationTypePermissionsRequest) ProtoMessage() {}

func (x *ListRelationTypePermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelationTypePermissionsRequest.ProtoReflect.Descriptor instead.
func (*ListRelationTypePermissionsRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{60}
}

func (x *ListRelationTypePermissionsRequest) GetPage() *v11.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListRelationTypePermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*RelationTypePermission `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` // array of relation permissions
	Page    *v11.PaginationResponse   `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`       // pagination response
}

func (x *ListRelationTypePermissionsResponse) Reset() {
	*x = ListRelationTypePermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelationTypePermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelationTypePermissionsResponse) ProtoMessage() {}

func (x *ListRelationTypePermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelationTypePermissionsResponse.ProtoReflect.Descriptor instead.
func (*ListRelationTypePermissionsResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{61}
}

func (x *ListRelationTypePermissionsResponse) GetResults() []*RelationTypePermission {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ListRelationTypePermissionsResponse) GetPage() *v11.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type CheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId string `protobuf:"bytes,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"` // target_id (UUID)
	// Types that are assignable to Check:
	//	*CheckRequest_RelationId
	//	*CheckRequest_PermissionId
	Check    isCheckRequest_Check `protobuf_oneof:"check"`
	ObjectId string               `protobuf:"bytes,4,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"` // source_id (UUID)
	Trace    bool                 `protobuf:"varint,5,opt,name=trace,proto3" json:"trace,omitempty"`                      // collect trace information
}

func (x *CheckRequest) Reset() {
	*x = CheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRequest) ProtoMessage() {}

func (x *CheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRequest.ProtoReflect.Descriptor instead.
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{62}
}

func (x *CheckRequest) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (m *CheckRequest) GetCheck() isCheckRequest_Check {
	if m != nil {
		return m.Check
	}
	return nil
}

func (x *CheckRequest) GetRelationId() int32 {
	if x, ok := x.GetCheck().(*CheckRequest_RelationId); ok {
		return x.RelationId
	}
	return 0
}

func (x *CheckRequest) GetPermissionId() string {
	if x, ok := x.GetCheck().(*CheckRequest_PermissionId); ok {
		return x.PermissionId
	}
	return ""
}

func (x *CheckRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *CheckRequest) GetTrace() bool {
	if x != nil {
		return x.Trace
	}
	return false
}

type isCheckRequest_Check interface {
	isCheckRequest_Check()
}

type CheckRequest_RelationId struct {
	RelationId int32 `protobuf:"varint,2,opt,name=relation_id,json=relationId,proto3,oneof"` // relation_id (INT32)
}

type CheckRequest_PermissionId struct {
	PermissionId string `protobuf:"bytes,3,opt,name=permission_id,json=permissionId,proto3,oneof"` // permission_id (UUID)
}

func (*CheckRequest_RelationId) isCheckRequest_Check() {}

func (*CheckRequest_PermissionId) isCheckRequest_Check() {}

type CheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Check bool     `protobuf:"varint,1,opt,name=check,proto3" json:"check,omitempty"` // check result (BOOL)
	Trace []string `protobuf:"bytes,2,rep,name=trace,proto3" json:"trace,omitempty"`  // trace for true values
}

func (x *CheckResponse) Reset() {
	*x = CheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResponse) ProtoMessage() {}

func (x *CheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResponse.ProtoReflect.Descriptor instead.
func (*CheckResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{63}
}

func (x *CheckResponse) GetCheck() bool {
	if x != nil {
		return x.Check
	}
	return false
}

func (x *CheckResponse) GetTrace() []string {
	if x != nil {
		return x.Trace
	}
	return nil
}

type CheckRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId   string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`       // source_id (UUID)
	ObjectType string `protobuf:"bytes,2,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"` // source type name
	Relation   string `protobuf:"bytes,3,opt,name=relation,proto3" json:"relation,omitempty"`                       // relation type name
	SubjectId  string `protobuf:"bytes,4,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`    // target_id (UUID)
	Trace      bool   `protobuf:"varint,5,opt,name=trace,proto3" json:"trace,omitempty"`                            // collect trace information
}

func (x *CheckRelationRequest) Reset() {
	*x = CheckRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRelationRequest) ProtoMessage() {}

func (x *CheckRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRelationRequest.ProtoReflect.Descriptor instead.
func (*CheckRelationRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{64}
}

func (x *CheckRelationRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *CheckRelationRequest) GetObjectType() string {
	if x != nil {
		return x.ObjectType
	}
	return ""
}

func (x *CheckRelationRequest) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *CheckRelationRequest) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *CheckRelationRequest) GetTrace() bool {
	if x != nil {
		return x.Trace
	}
	return false
}

type CheckRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Check bool     `protobuf:"varint,1,opt,name=check,proto3" json:"check,omitempty"` // check result (BOOL)
	Trace []string `protobuf:"bytes,2,rep,name=trace,proto3" json:"trace,omitempty"`  // trace for true values
}

func (x *CheckRelationResponse) Reset() {
	*x = CheckRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRelationResponse) ProtoMessage() {}

func (x *CheckRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRelationResponse.ProtoReflect.Descriptor instead.
func (*CheckRelationResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{65}
}

func (x *CheckRelationResponse) GetCheck() bool {
	if x != nil {
		return x.Check
	}
	return false
}

func (x *CheckRelationResponse) GetTrace() []string {
	if x != nil {
		return x.Trace
	}
	return nil
}

type CheckPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId   string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`       // source_id (UUID)
	ObjectType string `protobuf:"bytes,2,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"` // source type name
	Permission string `protobuf:"bytes,3,opt,name=permission,proto3" json:"permission,omitempty"`                   // permission name
	SubjectId  string `protobuf:"bytes,4,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`    // target_id (UUID)
	Trace      bool   `protobuf:"varint,5,opt,name=trace,proto3" json:"trace,omitempty"`                            // collect trace information
}

func (x *CheckPermissionRequest) Reset() {
	*x = CheckPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionRequest) ProtoMessage() {}

func (x *CheckPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionRequest.ProtoReflect.Descriptor instead.
func (*CheckPermissionRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{66}
}

func (x *CheckPermissionRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *CheckPermissionRequest) GetObjectType() string {
	if x != nil {
		return x.ObjectType
	}
	return ""
}

func (x *CheckPermissionRequest) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *CheckPermissionRequest) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *CheckPermissionRequest) GetTrace() bool {
	if x != nil {
		return x.Trace
	}
	return false
}

type CheckPermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Check bool     `protobuf:"varint,1,opt,name=check,proto3" json:"check,omitempty"` // check result (BOOL)
	Trace []string `protobuf:"bytes,2,rep,name=trace,proto3" json:"trace,omitempty"`  // trace for true values
}

func (x *CheckPermissionResponse) Reset() {
	*x = CheckPermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionResponse) ProtoMessage() {}

func (x *CheckPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionResponse.ProtoReflect.Descriptor instead.
func (*CheckPermissionResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{67}
}

func (x *CheckPermissionResponse) GetCheck() bool {
	if x != nil {
		return x.Check
	}
	return false
}

func (x *CheckPermissionResponse) GetTrace() []string {
	if x != nil {
		return x.Trace
	}
	return nil
}

type ListObjectGraphRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnchorId   string `protobuf:"bytes,1,opt,name=anchor_id,json=anchorId,proto3" json:"anchor_id,omitempty"`        // anchor ID, source or target (UUID)
	SourceType int32  `protobuf:"varint,2,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"` // source object type ID
	SourceId   string `protobuf:"bytes,3,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`        // source object ID (UUID)
	Relation   int32  `protobuf:"varint,4,opt,name=relation,proto3" json:"relation,omitempty"`                       // relation type ID
	TargetType int32  `protobuf:"varint,5,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"` // target object type ID
	TargetId   string `protobuf:"bytes,6,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`        // target object ID (UUID)
}

func (x *ListObjectGraphRequest) Reset() {
	*x = ListObjectGraphRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectGraphRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectGraphRequest) ProtoMessage() {}

func (x *ListObjectGraphRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectGraphRequest.ProtoReflect.Descriptor instead.
func (*ListObjectGraphRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{68}
}

func (x *ListObjectGraphRequest) GetAnchorId() string {
	if x != nil {
		return x.AnchorId
	}
	return ""
}

func (x *ListObjectGraphRequest) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *ListObjectGraphRequest) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *ListObjectGraphRequest) GetRelation() int32 {
	if x != nil {
		return x.Relation
	}
	return 0
}

func (x *ListObjectGraphRequest) GetTargetType() int32 {
	if x != nil {
		return x.TargetType
	}
	return 0
}

func (x *ListObjectGraphRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type ListObjectGraphResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ObjectDependency `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` // relationship graph
}

func (x *ListObjectGraphResponse) Reset() {
	*x = ListObjectGraphResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectGraphResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectGraphResponse) ProtoMessage() {}

func (x *ListObjectGraphResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectGraphResponse.ProtoReflect.Descriptor instead.
func (*ListObjectGraphResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{69}
}

func (x *ListObjectGraphResponse) GetResults() []*ObjectDependency {
	if x != nil {
		return x.Results
	}
	return nil
}

type GetGraphRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnchorId   string `protobuf:"bytes,1,opt,name=anchor_id,json=anchorId,proto3" json:"anchor_id,omitempty"`       // anchor ID, source or target (UUID)
	SourceType string `protobuf:"bytes,2,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"` // source object type name
	SourceId   string `protobuf:"bytes,3,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`       // source object ID (UUID)
	Relation   string `protobuf:"bytes,4,opt,name=relation,proto3" json:"relation,omitempty"`                       // relation type name
	TargetType string `protobuf:"bytes,5,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"` // target object type name
	TargetId   string `protobuf:"bytes,6,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`       // target object ID (UUID)
}

func (x *GetGraphRequest) Reset() {
	*x = GetGraphRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGraphRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGraphRequest) ProtoMessage() {}

func (x *GetGraphRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGraphRequest.ProtoReflect.Descriptor instead.
func (*GetGraphRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{70}
}

func (x *GetGraphRequest) GetAnchorId() string {
	if x != nil {
		return x.AnchorId
	}
	return ""
}

func (x *GetGraphRequest) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

func (x *GetGraphRequest) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *GetGraphRequest) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *GetGraphRequest) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *GetGraphRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type GetGraphResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ObjectDependency `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` // relationship graph
}

func (x *GetGraphResponse) Reset() {
	*x = GetGraphResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_v2_directory_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGraphResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGraphResponse) ProtoMessage() {}

func (x *GetGraphResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_v2_directory_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGraphResponse.ProtoReflect.Descriptor instead.
func (*GetGraphResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_v2_directory_proto_rawDescGZIP(), []int{71}
}

func (x *GetGraphResponse) GetResults() []*ObjectDependency {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_aserto_directory_v2_directory_proto protoreflect.FileDescriptor

var file_aserto_directory_v2_directory_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70,
	0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x69, 0x6e,
	0x66, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x22, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0d, 0x0a, 0x0b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x0c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x22, 0x80, 0x04,
	0x0a, 0x0d, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x6f,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x42, 0x0a, 0x0b,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x3b, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a,
	0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x73,
	0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x67, 0x0a, 0x18, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61,
	0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x16, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x6d, 0x73, 0x67, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66,
	0x22, 0x3a, 0x0a, 0x0e, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x47, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x52, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x58, 0x0a, 0x14, 0x53, 0x65, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x40, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x52, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x4a, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x22, 0x4a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x4e, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22,
	0x8b, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61,
	0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x27, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6d, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x56, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x22, 0x60, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a,
	0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x56, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x70, 0x0a,
	0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x73, 0x65, 0x72,
	0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4b, 0x65, 0x79, 0x48,
	0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22,
	0x4c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x86, 0x01,
	0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x34, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x35, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x61, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x73,
	0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x4a, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x47, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73,
	0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0x4a, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x64, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b,
	0x65, 0x79, 0x48, 0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x22, 0x46, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6c, 0x0a, 0x12, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4c, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x42, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x47, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x4f, 0x62, 0x6a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x22, 0x4e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x73, 0x65,
	0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x22, 0x4f, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x73, 0x65,
	0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x4e, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x73,
	0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xe4, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x34, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x22, 0xa7, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x53, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x20, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x52, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x57,
	0x0a, 0x14, 0x53, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x73, 0x65,
	0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x39, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x56, 0x0a, 0x17, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x22, 0x4a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x4e, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22,
	0x8b, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61,
	0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x24, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x68, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x6a, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x89, 0x01, 0x0a,
	0x20, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x65, 0x0a, 0x18, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x16, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6a, 0x0a, 0x21, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x22, 0x6b, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x56, 0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5a, 0x0a, 0x22, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x0c,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x22, 0x3b, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x22, 0xa5,
	0x01, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x22, 0x43, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x16,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x22, 0x45, 0x0a, 0x17, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x22, 0xcd, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64,
	0x22, 0x5a, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61,
	0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xc6, 0x01, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x73, 0x65,
	0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2a, 0x3f, 0x0a, 0x06, 0x4f, 0x70,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x50, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x50, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x32, 0xb4, 0x1e, 0x0a, 0x09,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x68, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x2e, 0x61, 0x73, 0x65,
	0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a,
	0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2c, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6e, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6e, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x77, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x2d, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x68, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x0d, 0x53,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x61,
	0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x61, 0x73, 0x65, 0x72,
	0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x2e, 0x61, 0x73,
	0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74,
	0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x12, 0x23, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74,
	0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x8c, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x35,
	0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x8c, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x95,
	0x01, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x38, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x61, 0x73, 0x65, 0x72,
	0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x92, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x38, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x25, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74,
	0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x09, 0x53, 0x65, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x25, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x28, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x27, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x53, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x12, 0x22, 0x2e, 0x61,
	0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0b, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x61, 0x73, 0x65,
	0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6b, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2a, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x0d,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74,
	0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c,
	0x12, 0x22, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x2b,
	0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x73,
	0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x24, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12,
	0x21, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x61, 0x73, 0x65, 0x72,
	0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0xbd, 0x01, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x2e, 0x61, 0x73,
	0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x70, 0x92, 0x41, 0x4f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x20, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x41, 0x50, 0x49, 0x1a, 0x1a, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x20, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x41, 0x50,
	0x49, 0x2e, 0x2a, 0x0e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x69, 0x6e,
	0x66, 0x6f, 0x62, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x32, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x69, 0x6e,
	0x66, 0x6f, 0x42, 0x70, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x67, 0x6f, 0x2d, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2f,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x76, 0x32, 0x3b, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x92, 0x41, 0x2b, 0x2a, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e,
	0x5a, 0x00, 0x62, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aserto_directory_v2_directory_proto_rawDescOnce sync.Once
	file_aserto_directory_v2_directory_proto_rawDescData = file_aserto_directory_v2_directory_proto_rawDesc
)

func file_aserto_directory_v2_directory_proto_rawDescGZIP() []byte {
	file_aserto_directory_v2_directory_proto_rawDescOnce.Do(func() {
		file_aserto_directory_v2_directory_proto_rawDescData = protoimpl.X.CompressGZIP(file_aserto_directory_v2_directory_proto_rawDescData)
	})
	return file_aserto_directory_v2_directory_proto_rawDescData
}

var file_aserto_directory_v2_directory_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_aserto_directory_v2_directory_proto_msgTypes = make([]protoimpl.MessageInfo, 72)
var file_aserto_directory_v2_directory_proto_goTypes = []interface{}{
	(Opcode)(0),                                  // 0: aserto.directory.v2.Opcode
	(*InfoRequest)(nil),                          // 1: aserto.directory.v2.InfoRequest
	(*InfoResponse)(nil),                         // 2: aserto.directory.v2.InfoResponse
	(*LoaderRequest)(nil),                        // 3: aserto.directory.v2.LoaderRequest
	(*LoaderResponse)(nil),                       // 4: aserto.directory.v2.LoaderResponse
	(*GetObjectTypeRequest)(nil),                 // 5: aserto.directory.v2.GetObjectTypeRequest
	(*GetObjectTypeResponse)(nil),                // 6: aserto.directory.v2.GetObjectTypeResponse
	(*SetObjectTypeRequest)(nil),                 // 7: aserto.directory.v2.SetObjectTypeRequest
	(*SetObjectTypeResponse)(nil),                // 8: aserto.directory.v2.SetObjectTypeResponse
	(*DeleteObjectTypeRequest)(nil),              // 9: aserto.directory.v2.DeleteObjectTypeRequest
	(*DeleteObjectTypeResponse)(nil),             // 10: aserto.directory.v2.DeleteObjectTypeResponse
	(*ListObjectTypesRequest)(nil),               // 11: aserto.directory.v2.ListObjectTypesRequest
	(*ListObjectTypesResponse)(nil),              // 12: aserto.directory.v2.ListObjectTypesResponse
	(*GetObjTypeRequest)(nil),                    // 13: aserto.directory.v2.GetObjTypeRequest
	(*GetObjTypeResponse)(nil),                   // 14: aserto.directory.v2.GetObjTypeResponse
	(*GetRelationTypeRequest)(nil),               // 15: aserto.directory.v2.GetRelationTypeRequest
	(*GetRelationTypeResponse)(nil),              // 16: aserto.directory.v2.GetRelationTypeResponse
	(*SetRelationTypeRequest)(nil),               // 17: aserto.directory.v2.SetRelationTypeRequest
	(*SetRelationTypeResponse)(nil),              // 18: aserto.directory.v2.SetRelationTypeResponse
	(*DeleteRelationTypeRequest)(nil),            // 19: aserto.directory.v2.DeleteRelationTypeRequest
	(*DeleteRelationTypeResponse)(nil),           // 20: aserto.directory.v2.DeleteRelationTypeResponse
	(*ListRelationTypesRequest)(nil),             // 21: aserto.directory.v2.ListRelationTypesRequest
	(*ListRelationTypesResponse)(nil),            // 22: aserto.directory.v2.ListRelationTypesResponse
	(*GetRelTypeRequest)(nil),                    // 23: aserto.directory.v2.GetRelTypeRequest
	(*GetRelTypeResponse)(nil),                   // 24: aserto.directory.v2.GetRelTypeResponse
	(*GetObjectRequest)(nil),                     // 25: aserto.directory.v2.GetObjectRequest
	(*GetObjectResponse)(nil),                    // 26: aserto.directory.v2.GetObjectResponse
	(*SetObjectRequest)(nil),                     // 27: aserto.directory.v2.SetObjectRequest
	(*SetObjectResponse)(nil),                    // 28: aserto.directory.v2.SetObjectResponse
	(*DeleteObjectRequest)(nil),                  // 29: aserto.directory.v2.DeleteObjectRequest
	(*DeleteObjectResponse)(nil),                 // 30: aserto.directory.v2.DeleteObjectResponse
	(*ListObjectsRequest)(nil),                   // 31: aserto.directory.v2.ListObjectsRequest
	(*ListObjectsResponse)(nil),                  // 32: aserto.directory.v2.ListObjectsResponse
	(*GetObjRequest)(nil),                        // 33: aserto.directory.v2.GetObjRequest
	(*GetObjResponse)(nil),                       // 34: aserto.directory.v2.GetObjResponse
	(*GetRelationRequest)(nil),                   // 35: aserto.directory.v2.GetRelationRequest
	(*GetRelationResponse)(nil),                  // 36: aserto.directory.v2.GetRelationResponse
	(*SetRelationRequest)(nil),                   // 37: aserto.directory.v2.SetRelationRequest
	(*SetRelationResponse)(nil),                  // 38: aserto.directory.v2.SetRelationResponse
	(*DeleteRelationRequest)(nil),                // 39: aserto.directory.v2.DeleteRelationRequest
	(*DeleteRelationResponse)(nil),               // 40: aserto.directory.v2.DeleteRelationResponse
	(*ListRelationsRequest)(nil),                 // 41: aserto.directory.v2.ListRelationsRequest
	(*ListRelationsResponse)(nil),                // 42: aserto.directory.v2.ListRelationsResponse
	(*GetRelRequest)(nil),                        // 43: aserto.directory.v2.GetRelRequest
	(*GetRelResponse)(nil),                       // 44: aserto.directory.v2.GetRelResponse
	(*GetPermissionRequest)(nil),                 // 45: aserto.directory.v2.GetPermissionRequest
	(*GetPermissionResponse)(nil),                // 46: aserto.directory.v2.GetPermissionResponse
	(*SetPermissionRequest)(nil),                 // 47: aserto.directory.v2.SetPermissionRequest
	(*SetPermissionResponse)(nil),                // 48: aserto.directory.v2.SetPermissionResponse
	(*DeletePermissionRequest)(nil),              // 49: aserto.directory.v2.DeletePermissionRequest
	(*DeletePermissionResponse)(nil),             // 50: aserto.directory.v2.DeletePermissionResponse
	(*ListPermissionsRequest)(nil),               // 51: aserto.directory.v2.ListPermissionsRequest
	(*ListPermissionsResponse)(nil),              // 52: aserto.directory.v2.ListPermissionsResponse
	(*GetPermRequest)(nil),                       // 53: aserto.directory.v2.GetPermRequest
	(*GetPermResponse)(nil),                      // 54: aserto.directory.v2.GetPermResponse
	(*GetRelationTypePermissionRequest)(nil),     // 55: aserto.directory.v2.GetRelationTypePermissionRequest
	(*GetRelationTypePermissionResponse)(nil),    // 56: aserto.directory.v2.GetRelationTypePermissionResponse
	(*SetRelationTypePermissionRequest)(nil),     // 57: aserto.directory.v2.SetRelationTypePermissionRequest
	(*SetRelationTypePermissionResponse)(nil),    // 58: aserto.directory.v2.SetRelationTypePermissionResponse
	(*DeleteRelationTypePermissionRequest)(nil),  // 59: aserto.directory.v2.DeleteRelationTypePermissionRequest
	(*DeleteRelationTypePermissionResponse)(nil), // 60: aserto.directory.v2.DeleteRelationTypePermissionResponse
	(*ListRelationTypePermissionsRequest)(nil),   // 61: aserto.directory.v2.ListRelationTypePermissionsRequest
	(*ListRelationTypePermissionsResponse)(nil),  // 62: aserto.directory.v2.ListRelationTypePermissionsResponse
	(*CheckRequest)(nil),                         // 63: aserto.directory.v2.CheckRequest
	(*CheckResponse)(nil),                        // 64: aserto.directory.v2.CheckResponse
	(*CheckRelationRequest)(nil),                 // 65: aserto.directory.v2.CheckRelationRequest
	(*CheckRelationResponse)(nil),                // 66: aserto.directory.v2.CheckRelationResponse
	(*CheckPermissionRequest)(nil),               // 67: aserto.directory.v2.CheckPermissionRequest
	(*CheckPermissionResponse)(nil),              // 68: aserto.directory.v2.CheckPermissionResponse
	(*ListObjectGraphRequest)(nil),               // 69: aserto.directory.v2.ListObjectGraphRequest
	(*ListObjectGraphResponse)(nil),              // 70: aserto.directory.v2.ListObjectGraphResponse
	(*GetGraphRequest)(nil),                      // 71: aserto.directory.v2.GetGraphRequest
	(*GetGraphResponse)(nil),                     // 72: aserto.directory.v2.GetGraphResponse
	(*v1.BuildInfo)(nil),                         // 73: aserto.common.info.v1.BuildInfo
	(*Object)(nil),                               // 74: aserto.directory.v2.Object
	(*ObjectType)(nil),                           // 75: aserto.directory.v2.ObjectType
	(*Relation)(nil),                             // 76: aserto.directory.v2.Relation
	(*RelationType)(nil),                         // 77: aserto.directory.v2.RelationType
	(*Permission)(nil),                           // 78: aserto.directory.v2.Permission
	(*RelationTypePermission)(nil),               // 79: aserto.directory.v2.RelationTypePermission
	(*status.Status)(nil),                        // 80: google.rpc.Status
	(*emptypb.Empty)(nil),                        // 81: google.protobuf.Empty
	(*v11.PaginationRequest)(nil),                // 82: aserto.api.v1.PaginationRequest
	(*v11.PaginationResponse)(nil),               // 83: aserto.api.v1.PaginationResponse
	(*RelationTypeKey)(nil),                      // 84: aserto.directory.v2.RelationTypeKey
	(*ObjectKey)(nil),                            // 85: aserto.directory.v2.ObjectKey
	(*ObjectDependency)(nil),                     // 86: aserto.directory.v2.ObjectDependency
}
var file_aserto_directory_v2_directory_proto_depIdxs = []int32{
	73, // 0: aserto.directory.v2.InfoResponse.build:type_name -> aserto.common.info.v1.BuildInfo
	0,  // 1: aserto.directory.v2.LoaderRequest.op_code:type_name -> aserto.directory.v2.Opcode
	74, // 2: aserto.directory.v2.LoaderRequest.object:type_name -> aserto.directory.v2.Object
	75, // 3: aserto.directory.v2.LoaderRequest.object_type:type_name -> aserto.directory.v2.ObjectType
	76, // 4: aserto.directory.v2.LoaderRequest.relation:type_name -> aserto.directory.v2.Relation
	77, // 5: aserto.directory.v2.LoaderRequest.relation_type:type_name -> aserto.directory.v2.RelationType
	78, // 6: aserto.directory.v2.LoaderRequest.permission:type_name -> aserto.directory.v2.Permission
	79, // 7: aserto.directory.v2.LoaderRequest.relation_type_permission:type_name -> aserto.directory.v2.RelationTypePermission
	80, // 8: aserto.directory.v2.LoaderResponse.error:type_name -> google.rpc.Status
	75, // 9: aserto.directory.v2.GetObjectTypeResponse.results:type_name -> aserto.directory.v2.ObjectType
	75, // 10: aserto.directory.v2.SetObjectTypeRequest.object_type:type_name -> aserto.directory.v2.ObjectType
	75, // 11: aserto.directory.v2.SetObjectTypeResponse.results:type_name -> aserto.directory.v2.ObjectType
	81, // 12: aserto.directory.v2.DeleteObjectTypeResponse.result:type_name -> google.protobuf.Empty
	82, // 13: aserto.directory.v2.ListObjectTypesRequest.page:type_name -> aserto.api.v1.PaginationRequest
	75, // 14: aserto.directory.v2.ListObjectTypesResponse.results:type_name -> aserto.directory.v2.ObjectType
	83, // 15: aserto.directory.v2.ListObjectTypesResponse.page:type_name -> aserto.api.v1.PaginationResponse
	84, // 16: aserto.directory.v2.GetRelationTypeRequest.key:type_name -> aserto.directory.v2.RelationTypeKey
	77, // 17: aserto.directory.v2.GetRelationTypeResponse.results:type_name -> aserto.directory.v2.RelationType
	77, // 18: aserto.directory.v2.SetRelationTypeRequest.relation_type:type_name -> aserto.directory.v2.RelationType
	77, // 19: aserto.directory.v2.SetRelationTypeResponse.results:type_name -> aserto.directory.v2.RelationType
	84, // 20: aserto.directory.v2.DeleteRelationTypeRequest.key:type_name -> aserto.directory.v2.RelationTypeKey
	81, // 21: aserto.directory.v2.DeleteRelationTypeResponse.result:type_name -> google.protobuf.Empty
	82, // 22: aserto.directory.v2.ListRelationTypesRequest.page:type_name -> aserto.api.v1.PaginationRequest
	77, // 23: aserto.directory.v2.ListRelationTypesResponse.results:type_name -> aserto.directory.v2.RelationType
	83, // 24: aserto.directory.v2.ListRelationTypesResponse.page:type_name -> aserto.api.v1.PaginationResponse
	85, // 25: aserto.directory.v2.GetObjectRequest.key:type_name -> aserto.directory.v2.ObjectKey
	74, // 26: aserto.directory.v2.GetObjectResponse.results:type_name -> aserto.directory.v2.Object
	74, // 27: aserto.directory.v2.SetObjectRequest.object:type_name -> aserto.directory.v2.Object
	74, // 28: aserto.directory.v2.SetObjectResponse.results:type_name -> aserto.directory.v2.Object
	85, // 29: aserto.directory.v2.DeleteObjectRequest.key:type_name -> aserto.directory.v2.ObjectKey
	81, // 30: aserto.directory.v2.DeleteObjectResponse.result:type_name -> google.protobuf.Empty
	82, // 31: aserto.directory.v2.ListObjectsRequest.page:type_name -> aserto.api.v1.PaginationRequest
	74, // 32: aserto.directory.v2.ListObjectsResponse.results:type_name -> aserto.directory.v2.Object
	74, // 33: aserto.directory.v2.GetObjResponse.results:type_name -> aserto.directory.v2.Object
	76, // 34: aserto.directory.v2.GetRelationResponse.results:type_name -> aserto.directory.v2.Relation
	76, // 35: aserto.directory.v2.SetRelationRequest.relation:type_name -> aserto.directory.v2.Relation
	76, // 36: aserto.directory.v2.SetRelationResponse.results:type_name -> aserto.directory.v2.Relation
	81, // 37: aserto.directory.v2.DeleteRelationResponse.result:type_name -> google.protobuf.Empty
	82, // 38: aserto.directory.v2.ListRelationsRequest.page:type_name -> aserto.api.v1.PaginationRequest
	76, // 39: aserto.directory.v2.ListRelationsResponse.results:type_name -> aserto.directory.v2.Relation
	83, // 40: aserto.directory.v2.ListRelationsResponse.page:type_name -> aserto.api.v1.PaginationResponse
	76, // 41: aserto.directory.v2.GetRelResponse.results:type_name -> aserto.directory.v2.Relation
	78, // 42: aserto.directory.v2.GetPermissionResponse.results:type_name -> aserto.directory.v2.Permission
	78, // 43: aserto.directory.v2.SetPermissionRequest.permission:type_name -> aserto.directory.v2.Permission
	78, // 44: aserto.directory.v2.SetPermissionResponse.results:type_name -> aserto.directory.v2.Permission
	81, // 45: aserto.directory.v2.DeletePermissionResponse.result:type_name -> google.protobuf.Empty
	82, // 46: aserto.directory.v2.ListPermissionsRequest.page:type_name -> aserto.api.v1.PaginationRequest
	78, // 47: aserto.directory.v2.ListPermissionsResponse.results:type_name -> aserto.directory.v2.Permission
	83, // 48: aserto.directory.v2.ListPermissionsResponse.page:type_name -> aserto.api.v1.PaginationResponse
	79, // 49: aserto.directory.v2.GetRelationTypePermissionResponse.results:type_name -> aserto.directory.v2.RelationTypePermission
	79, // 50: aserto.directory.v2.SetRelationTypePermissionRequest.relation_type_permission:type_name -> aserto.directory.v2.RelationTypePermission
	79, // 51: aserto.directory.v2.SetRelationTypePermissionResponse.results:type_name -> aserto.directory.v2.RelationTypePermission
	81, // 52: aserto.directory.v2.DeleteRelationTypePermissionResponse.result:type_name -> google.protobuf.Empty
	82, // 53: aserto.directory.v2.ListRelationTypePermissionsRequest.page:type_name -> aserto.api.v1.PaginationRequest
	79, // 54: aserto.directory.v2.ListRelationTypePermissionsResponse.results:type_name -> aserto.directory.v2.RelationTypePermission
	83, // 55: aserto.directory.v2.ListRelationTypePermissionsResponse.page:type_name -> aserto.api.v1.PaginationResponse
	86, // 56: aserto.directory.v2.ListObjectGraphResponse.results:type_name -> aserto.directory.v2.ObjectDependency
	86, // 57: aserto.directory.v2.GetGraphResponse.results:type_name -> aserto.directory.v2.ObjectDependency
	5,  // 58: aserto.directory.v2.Directory.GetObjectType:input_type -> aserto.directory.v2.GetObjectTypeRequest
	7,  // 59: aserto.directory.v2.Directory.SetObjectType:input_type -> aserto.directory.v2.SetObjectTypeRequest
	9,  // 60: aserto.directory.v2.Directory.DeleteObjectType:input_type -> aserto.directory.v2.DeleteObjectTypeRequest
	11, // 61: aserto.directory.v2.Directory.ListObjectTypes:input_type -> aserto.directory.v2.ListObjectTypesRequest
	13, // 62: aserto.directory.v2.Directory.GetObjType:input_type -> aserto.directory.v2.GetObjTypeRequest
	15, // 63: aserto.directory.v2.Directory.GetRelationType:input_type -> aserto.directory.v2.GetRelationTypeRequest
	17, // 64: aserto.directory.v2.Directory.SetRelationType:input_type -> aserto.directory.v2.SetRelationTypeRequest
	19, // 65: aserto.directory.v2.Directory.DeleteRelationType:input_type -> aserto.directory.v2.DeleteRelationTypeRequest
	21, // 66: aserto.directory.v2.Directory.ListRelationTypes:input_type -> aserto.directory.v2.ListRelationTypesRequest
	23, // 67: aserto.directory.v2.Directory.GetRelType:input_type -> aserto.directory.v2.GetRelTypeRequest
	45, // 68: aserto.directory.v2.Directory.GetPermission:input_type -> aserto.directory.v2.GetPermissionRequest
	47, // 69: aserto.directory.v2.Directory.SetPermission:input_type -> aserto.directory.v2.SetPermissionRequest
	49, // 70: aserto.directory.v2.Directory.DeletePermission:input_type -> aserto.directory.v2.DeletePermissionRequest
	51, // 71: aserto.directory.v2.Directory.ListPermissions:input_type -> aserto.directory.v2.ListPermissionsRequest
	53, // 72: aserto.directory.v2.Directory.GetPerm:input_type -> aserto.directory.v2.GetPermRequest
	55, // 73: aserto.directory.v2.Directory.GetRelationTypePermission:input_type -> aserto.directory.v2.GetRelationTypePermissionRequest
	57, // 74: aserto.directory.v2.Directory.SetRelationTypePermission:input_type -> aserto.directory.v2.SetRelationTypePermissionRequest
	59, // 75: aserto.directory.v2.Directory.DeleteRelationTypePermission:input_type -> aserto.directory.v2.DeleteRelationTypePermissionRequest
	61, // 76: aserto.directory.v2.Directory.ListRelationTypePermissions:input_type -> aserto.directory.v2.ListRelationTypePermissionsRequest
	25, // 77: aserto.directory.v2.Directory.GetObject:input_type -> aserto.directory.v2.GetObjectRequest
	27, // 78: aserto.directory.v2.Directory.SetObject:input_type -> aserto.directory.v2.SetObjectRequest
	29, // 79: aserto.directory.v2.Directory.DeleteObject:input_type -> aserto.directory.v2.DeleteObjectRequest
	31, // 80: aserto.directory.v2.Directory.ListObjects:input_type -> aserto.directory.v2.ListObjectsRequest
	33, // 81: aserto.directory.v2.Directory.GetObj:input_type -> aserto.directory.v2.GetObjRequest
	35, // 82: aserto.directory.v2.Directory.GetRelation:input_type -> aserto.directory.v2.GetRelationRequest
	37, // 83: aserto.directory.v2.Directory.SetRelation:input_type -> aserto.directory.v2.SetRelationRequest
	39, // 84: aserto.directory.v2.Directory.DeleteRelation:input_type -> aserto.directory.v2.DeleteRelationRequest
	41, // 85: aserto.directory.v2.Directory.ListRelations:input_type -> aserto.directory.v2.ListRelationsRequest
	43, // 86: aserto.directory.v2.Directory.GetRel:input_type -> aserto.directory.v2.GetRelRequest
	69, // 87: aserto.directory.v2.Directory.ListObjectGraph:input_type -> aserto.directory.v2.ListObjectGraphRequest
	71, // 88: aserto.directory.v2.Directory.GetGraph:input_type -> aserto.directory.v2.GetGraphRequest
	63, // 89: aserto.directory.v2.Directory.Check:input_type -> aserto.directory.v2.CheckRequest
	65, // 90: aserto.directory.v2.Directory.CheckRelation:input_type -> aserto.directory.v2.CheckRelationRequest
	67, // 91: aserto.directory.v2.Directory.CheckPermission:input_type -> aserto.directory.v2.CheckPermissionRequest
	1,  // 92: aserto.directory.v2.Directory.Info:input_type -> aserto.directory.v2.InfoRequest
	6,  // 93: aserto.directory.v2.Directory.GetObjectType:output_type -> aserto.directory.v2.GetObjectTypeResponse
	8,  // 94: aserto.directory.v2.Directory.SetObjectType:output_type -> aserto.directory.v2.SetObjectTypeResponse
	10, // 95: aserto.directory.v2.Directory.DeleteObjectType:output_type -> aserto.directory.v2.DeleteObjectTypeResponse
	12, // 96: aserto.directory.v2.Directory.ListObjectTypes:output_type -> aserto.directory.v2.ListObjectTypesResponse
	14, // 97: aserto.directory.v2.Directory.GetObjType:output_type -> aserto.directory.v2.GetObjTypeResponse
	16, // 98: aserto.directory.v2.Directory.GetRelationType:output_type -> aserto.directory.v2.GetRelationTypeResponse
	18, // 99: aserto.directory.v2.Directory.SetRelationType:output_type -> aserto.directory.v2.SetRelationTypeResponse
	20, // 100: aserto.directory.v2.Directory.DeleteRelationType:output_type -> aserto.directory.v2.DeleteRelationTypeResponse
	22, // 101: aserto.directory.v2.Directory.ListRelationTypes:output_type -> aserto.directory.v2.ListRelationTypesResponse
	24, // 102: aserto.directory.v2.Directory.GetRelType:output_type -> aserto.directory.v2.GetRelTypeResponse
	46, // 103: aserto.directory.v2.Directory.GetPermission:output_type -> aserto.directory.v2.GetPermissionResponse
	48, // 104: aserto.directory.v2.Directory.SetPermission:output_type -> aserto.directory.v2.SetPermissionResponse
	50, // 105: aserto.directory.v2.Directory.DeletePermission:output_type -> aserto.directory.v2.DeletePermissionResponse
	52, // 106: aserto.directory.v2.Directory.ListPermissions:output_type -> aserto.directory.v2.ListPermissionsResponse
	54, // 107: aserto.directory.v2.Directory.GetPerm:output_type -> aserto.directory.v2.GetPermResponse
	56, // 108: aserto.directory.v2.Directory.GetRelationTypePermission:output_type -> aserto.directory.v2.GetRelationTypePermissionResponse
	58, // 109: aserto.directory.v2.Directory.SetRelationTypePermission:output_type -> aserto.directory.v2.SetRelationTypePermissionResponse
	60, // 110: aserto.directory.v2.Directory.DeleteRelationTypePermission:output_type -> aserto.directory.v2.DeleteRelationTypePermissionResponse
	62, // 111: aserto.directory.v2.Directory.ListRelationTypePermissions:output_type -> aserto.directory.v2.ListRelationTypePermissionsResponse
	26, // 112: aserto.directory.v2.Directory.GetObject:output_type -> aserto.directory.v2.GetObjectResponse
	28, // 113: aserto.directory.v2.Directory.SetObject:output_type -> aserto.directory.v2.SetObjectResponse
	30, // 114: aserto.directory.v2.Directory.DeleteObject:output_type -> aserto.directory.v2.DeleteObjectResponse
	32, // 115: aserto.directory.v2.Directory.ListObjects:output_type -> aserto.directory.v2.ListObjectsResponse
	34, // 116: aserto.directory.v2.Directory.GetObj:output_type -> aserto.directory.v2.GetObjResponse
	36, // 117: aserto.directory.v2.Directory.GetRelation:output_type -> aserto.directory.v2.GetRelationResponse
	38, // 118: aserto.directory.v2.Directory.SetRelation:output_type -> aserto.directory.v2.SetRelationResponse
	40, // 119: aserto.directory.v2.Directory.DeleteRelation:output_type -> aserto.directory.v2.DeleteRelationResponse
	42, // 120: aserto.directory.v2.Directory.ListRelations:output_type -> aserto.directory.v2.ListRelationsResponse
	44, // 121: aserto.directory.v2.Directory.GetRel:output_type -> aserto.directory.v2.GetRelResponse
	70, // 122: aserto.directory.v2.Directory.ListObjectGraph:output_type -> aserto.directory.v2.ListObjectGraphResponse
	72, // 123: aserto.directory.v2.Directory.GetGraph:output_type -> aserto.directory.v2.GetGraphResponse
	64, // 124: aserto.directory.v2.Directory.Check:output_type -> aserto.directory.v2.CheckResponse
	66, // 125: aserto.directory.v2.Directory.CheckRelation:output_type -> aserto.directory.v2.CheckRelationResponse
	68, // 126: aserto.directory.v2.Directory.CheckPermission:output_type -> aserto.directory.v2.CheckPermissionResponse
	2,  // 127: aserto.directory.v2.Directory.Info:output_type -> aserto.directory.v2.InfoResponse
	93, // [93:128] is the sub-list for method output_type
	58, // [58:93] is the sub-list for method input_type
	58, // [58:58] is the sub-list for extension type_name
	58, // [58:58] is the sub-list for extension extendee
	0,  // [0:58] is the sub-list for field type_name
}

func init() { file_aserto_directory_v2_directory_proto_init() }
func file_aserto_directory_v2_directory_proto_init() {
	if File_aserto_directory_v2_directory_proto != nil {
		return
	}
	file_aserto_directory_v2_object_proto_init()
	file_aserto_directory_v2_relation_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_aserto_directory_v2_directory_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetObjectTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetObjectTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteObjectTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteObjectTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelationTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelationTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRelationTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRelationTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRelationTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRelationTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelationTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelationTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelationTypePermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelationTypePermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRelationTypePermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRelationTypePermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRelationTypePermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRelationTypePermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelationTypePermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelationTypePermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectGraphRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectGraphResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGraphRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_v2_directory_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGraphResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_aserto_directory_v2_directory_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*LoaderRequest_Object)(nil),
		(*LoaderRequest_ObjectType)(nil),
		(*LoaderRequest_Relation)(nil),
		(*LoaderRequest_RelationType)(nil),
		(*LoaderRequest_Permission)(nil),
		(*LoaderRequest_RelationTypePermission)(nil),
	}
	file_aserto_directory_v2_directory_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*GetObjectTypeRequest_Id)(nil),
		(*GetObjectTypeRequest_Name)(nil),
	}
	file_aserto_directory_v2_directory_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*DeleteObjectTypeRequest_Id)(nil),
		(*DeleteObjectTypeRequest_Name)(nil),
	}
	file_aserto_directory_v2_directory_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*GetRelationTypeRequest_Id)(nil),
		(*GetRelationTypeRequest_Key)(nil),
	}
	file_aserto_directory_v2_directory_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*DeleteRelationTypeRequest_Id)(nil),
		(*DeleteRelationTypeRequest_Key)(nil),
	}
	file_aserto_directory_v2_directory_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_aserto_directory_v2_directory_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*GetObjectRequest_Id)(nil),
		(*GetObjectRequest_Key)(nil),
	}
	file_aserto_directory_v2_directory_proto_msgTypes[28].OneofWrappers = []interface{}{
		(*DeleteObjectRequest_Id)(nil),
		(*DeleteObjectRequest_Key)(nil),
	}
	file_aserto_directory_v2_directory_proto_msgTypes[30].OneofWrappers = []interface{}{}
	file_aserto_directory_v2_directory_proto_msgTypes[44].OneofWrappers = []interface{}{
		(*GetPermissionRequest_Id)(nil),
		(*GetPermissionRequest_Permission)(nil),
	}
	file_aserto_directory_v2_directory_proto_msgTypes[48].OneofWrappers = []interface{}{
		(*DeletePermissionRequest_Id)(nil),
		(*DeletePermissionRequest_Permission)(nil),
	}
	file_aserto_directory_v2_directory_proto_msgTypes[62].OneofWrappers = []interface{}{
		(*CheckRequest_RelationId)(nil),
		(*CheckRequest_PermissionId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aserto_directory_v2_directory_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   72,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aserto_directory_v2_directory_proto_goTypes,
		DependencyIndexes: file_aserto_directory_v2_directory_proto_depIdxs,
		EnumInfos:         file_aserto_directory_v2_directory_proto_enumTypes,
		MessageInfos:      file_aserto_directory_v2_directory_proto_msgTypes,
	}.Build()
	File_aserto_directory_v2_directory_proto = out.File
	file_aserto_directory_v2_directory_proto_rawDesc = nil
	file_aserto_directory_v2_directory_proto_goTypes = nil
	file_aserto_directory_v2_directory_proto_depIdxs = nil
}
