// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: aserto/directory/reader/v2/reader.proto

package reader

import (
	v2 "github.com/aserto-dev/go-directory/aserto/directory/common/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetObjectTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// object type selector
	Param *v2.ObjectTypeIdentifier `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *GetObjectTypeRequest) Reset() {
	*x = GetObjectTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectTypeRequest) ProtoMessage() {}

func (x *GetObjectTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectTypeRequest.ProtoReflect.Descriptor instead.
func (*GetObjectTypeRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{0}
}

func (x *GetObjectTypeRequest) GetParam() *v2.ObjectTypeIdentifier {
	if x != nil {
		return x.Param
	}
	return nil
}

type GetObjectTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// object type instance
	Result *v2.ObjectType `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetObjectTypeResponse) Reset() {
	*x = GetObjectTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectTypeResponse) ProtoMessage() {}

func (x *GetObjectTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectTypeResponse.ProtoReflect.Descriptor instead.
func (*GetObjectTypeResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{1}
}

func (x *GetObjectTypeResponse) GetResult() *v2.ObjectType {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetObjectTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pagination request
	Page *v2.PaginationRequest `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetObjectTypesRequest) Reset() {
	*x = GetObjectTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectTypesRequest) ProtoMessage() {}

func (x *GetObjectTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectTypesRequest.ProtoReflect.Descriptor instead.
func (*GetObjectTypesRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{2}
}

func (x *GetObjectTypesRequest) GetPage() *v2.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetObjectTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// array of object types
	Results []*v2.ObjectType `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// pagination response
	Page *v2.PaginationResponse `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetObjectTypesResponse) Reset() {
	*x = GetObjectTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectTypesResponse) ProtoMessage() {}

func (x *GetObjectTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectTypesResponse.ProtoReflect.Descriptor instead.
func (*GetObjectTypesResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{3}
}

func (x *GetObjectTypesResponse) GetResults() []*v2.ObjectType {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *GetObjectTypesResponse) GetPage() *v2.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetRelationTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// relation type selector
	Param *v2.RelationTypeIdentifier `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *GetRelationTypeRequest) Reset() {
	*x = GetRelationTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelationTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelationTypeRequest) ProtoMessage() {}

func (x *GetRelationTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelationTypeRequest.ProtoReflect.Descriptor instead.
func (*GetRelationTypeRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{4}
}

func (x *GetRelationTypeRequest) GetParam() *v2.RelationTypeIdentifier {
	if x != nil {
		return x.Param
	}
	return nil
}

type GetRelationTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// relation type instance
	Result *v2.RelationType `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetRelationTypeResponse) Reset() {
	*x = GetRelationTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelationTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelationTypeResponse) ProtoMessage() {}

func (x *GetRelationTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelationTypeResponse.ProtoReflect.Descriptor instead.
func (*GetRelationTypeResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{5}
}

func (x *GetRelationTypeResponse) GetResult() *v2.RelationType {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetRelationTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// object type selector
	Param *v2.ObjectTypeIdentifier `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
	// pagination request
	Page *v2.PaginationRequest `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetRelationTypesRequest) Reset() {
	*x = GetRelationTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelationTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelationTypesRequest) ProtoMessage() {}

func (x *GetRelationTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelationTypesRequest.ProtoReflect.Descriptor instead.
func (*GetRelationTypesRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{6}
}

func (x *GetRelationTypesRequest) GetParam() *v2.ObjectTypeIdentifier {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *GetRelationTypesRequest) GetPage() *v2.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetRelationTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// array of relation types
	Results []*v2.RelationType `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// pagination response
	Page *v2.PaginationResponse `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetRelationTypesResponse) Reset() {
	*x = GetRelationTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelationTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelationTypesResponse) ProtoMessage() {}

func (x *GetRelationTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelationTypesResponse.ProtoReflect.Descriptor instead.
func (*GetRelationTypesResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{7}
}

func (x *GetRelationTypesResponse) GetResults() []*v2.RelationType {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *GetRelationTypesResponse) GetPage() *v2.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// object selector
	Param *v2.ObjectIdentifier `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
	// materialize the object relations objects
	WithRelations *bool `protobuf:"varint,2,opt,name=with_relations,json=withRelations,proto3,oneof" json:"with_relations,omitempty"`
	// pagination request
	Page *v2.PaginationRequest `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetObjectRequest) Reset() {
	*x = GetObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectRequest) ProtoMessage() {}

func (x *GetObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectRequest.ProtoReflect.Descriptor instead.
func (*GetObjectRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{8}
}

func (x *GetObjectRequest) GetParam() *v2.ObjectIdentifier {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *GetObjectRequest) GetWithRelations() bool {
	if x != nil && x.WithRelations != nil {
		return *x.WithRelations
	}
	return false
}

func (x *GetObjectRequest) GetPage() *v2.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// object instance
	Result *v2.Object `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// object relations
	Relations []*v2.Relation `protobuf:"bytes,4,rep,name=relations,proto3" json:"relations,omitempty"`
	// pagination response
	Page *v2.PaginationResponse `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetObjectResponse) Reset() {
	*x = GetObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectResponse) ProtoMessage() {}

func (x *GetObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectResponse.ProtoReflect.Descriptor instead.
func (*GetObjectResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{9}
}

func (x *GetObjectResponse) GetResult() *v2.Object {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetObjectResponse) GetRelations() []*v2.Relation {
	if x != nil {
		return x.Relations
	}
	return nil
}

func (x *GetObjectResponse) GetPage() *v2.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetObjectManyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// object identifier list
	Param []*v2.ObjectIdentifier `protobuf:"bytes,1,rep,name=param,proto3" json:"param,omitempty"`
}

func (x *GetObjectManyRequest) Reset() {
	*x = GetObjectManyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectManyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectManyRequest) ProtoMessage() {}

func (x *GetObjectManyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectManyRequest.ProtoReflect.Descriptor instead.
func (*GetObjectManyRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{10}
}

func (x *GetObjectManyRequest) GetParam() []*v2.ObjectIdentifier {
	if x != nil {
		return x.Param
	}
	return nil
}

type GetObjectManyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// array of object instances
	Results []*v2.Object `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *GetObjectManyResponse) Reset() {
	*x = GetObjectManyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectManyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectManyResponse) ProtoMessage() {}

func (x *GetObjectManyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectManyResponse.ProtoReflect.Descriptor instead.
func (*GetObjectManyResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{11}
}

func (x *GetObjectManyResponse) GetResults() []*v2.Object {
	if x != nil {
		return x.Results
	}
	return nil
}

type GetObjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// object type selector
	Param *v2.ObjectTypeIdentifier `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
	// pagination request
	Page *v2.PaginationRequest `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetObjectsRequest) Reset() {
	*x = GetObjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectsRequest) ProtoMessage() {}

func (x *GetObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectsRequest.ProtoReflect.Descriptor instead.
func (*GetObjectsRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{12}
}

func (x *GetObjectsRequest) GetParam() *v2.ObjectTypeIdentifier {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *GetObjectsRequest) GetPage() *v2.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetObjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// array of object instances
	Results []*v2.Object `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// pagination response
	Page *v2.PaginationResponse `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetObjectsResponse) Reset() {
	*x = GetObjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectsResponse) ProtoMessage() {}

func (x *GetObjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectsResponse.ProtoReflect.Descriptor instead.
func (*GetObjectsResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{13}
}

func (x *GetObjectsResponse) GetResults() []*v2.Object {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *GetObjectsResponse) GetPage() *v2.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// relation selector
	Param *v2.RelationIdentifier `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
	// materialize relation objects
	WithObjects *bool `protobuf:"varint,2,opt,name=with_objects,json=withObjects,proto3,oneof" json:"with_objects,omitempty"`
}

func (x *GetRelationRequest) Reset() {
	*x = GetRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelationRequest) ProtoMessage() {}

func (x *GetRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelationRequest.ProtoReflect.Descriptor instead.
func (*GetRelationRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{14}
}

func (x *GetRelationRequest) GetParam() *v2.RelationIdentifier {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *GetRelationRequest) GetWithObjects() bool {
	if x != nil && x.WithObjects != nil {
		return *x.WithObjects
	}
	return false
}

type GetRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// array of relation instances
	Results []*v2.Relation `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// map of materialized relation objects
	Objects map[string]*v2.Object `protobuf:"bytes,2,rep,name=objects,proto3" json:"objects,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetRelationResponse) Reset() {
	*x = GetRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelationResponse) ProtoMessage() {}

func (x *GetRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelationResponse.ProtoReflect.Descriptor instead.
func (*GetRelationResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{15}
}

func (x *GetRelationResponse) GetResults() []*v2.Relation {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *GetRelationResponse) GetObjects() map[string]*v2.Object {
	if x != nil {
		return x.Objects
	}
	return nil
}

type GetRelationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// relation selector
	Param *v2.RelationIdentifier `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
	// pagination request
	Page *v2.PaginationRequest `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetRelationsRequest) Reset() {
	*x = GetRelationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelationsRequest) ProtoMessage() {}

func (x *GetRelationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelationsRequest.ProtoReflect.Descriptor instead.
func (*GetRelationsRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{16}
}

func (x *GetRelationsRequest) GetParam() *v2.RelationIdentifier {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *GetRelationsRequest) GetPage() *v2.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetRelationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// array of relation instances
	Results []*v2.Relation `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// pagination response
	Page *v2.PaginationResponse `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetRelationsResponse) Reset() {
	*x = GetRelationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelationsResponse) ProtoMessage() {}

func (x *GetRelationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelationsResponse.ProtoReflect.Descriptor instead.
func (*GetRelationsResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{17}
}

func (x *GetRelationsResponse) GetResults() []*v2.Relation {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *GetRelationsResponse) GetPage() *v2.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// permission selector
	Param *v2.PermissionIdentifier `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *GetPermissionRequest) Reset() {
	*x = GetPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionRequest) ProtoMessage() {}

func (x *GetPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionRequest.ProtoReflect.Descriptor instead.
func (*GetPermissionRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{18}
}

func (x *GetPermissionRequest) GetParam() *v2.PermissionIdentifier {
	if x != nil {
		return x.Param
	}
	return nil
}

type GetPermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// permission instance
	Result *v2.Permission `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetPermissionResponse) Reset() {
	*x = GetPermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionResponse) ProtoMessage() {}

func (x *GetPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionResponse.ProtoReflect.Descriptor instead.
func (*GetPermissionResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{19}
}

func (x *GetPermissionResponse) GetResult() *v2.Permission {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetPermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pagination request
	Page *v2.PaginationRequest `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetPermissionsRequest) Reset() {
	*x = GetPermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsRequest) ProtoMessage() {}

func (x *GetPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsRequest.ProtoReflect.Descriptor instead.
func (*GetPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{20}
}

func (x *GetPermissionsRequest) GetPage() *v2.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// array of permissions
	Results []*v2.Permission `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// pagination response
	Page *v2.PaginationResponse `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetPermissionsResponse) Reset() {
	*x = GetPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsResponse) ProtoMessage() {}

func (x *GetPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsResponse.ProtoReflect.Descriptor instead.
func (*GetPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{21}
}

func (x *GetPermissionsResponse) GetResults() []*v2.Permission {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *GetPermissionsResponse) GetPage() *v2.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type CheckPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// subject selector
	Subject *v2.ObjectIdentifier `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	// permission selector
	Permission *v2.PermissionIdentifier `protobuf:"bytes,2,opt,name=permission,proto3" json:"permission,omitempty"`
	// object selector
	Object *v2.ObjectIdentifier `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	// collect trace information
	Trace bool `protobuf:"varint,7,opt,name=trace,proto3" json:"trace,omitempty"`
}

func (x *CheckPermissionRequest) Reset() {
	*x = CheckPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionRequest) ProtoMessage() {}

func (x *CheckPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionRequest.ProtoReflect.Descriptor instead.
func (*CheckPermissionRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{22}
}

func (x *CheckPermissionRequest) GetSubject() *v2.ObjectIdentifier {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *CheckPermissionRequest) GetPermission() *v2.PermissionIdentifier {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *CheckPermissionRequest) GetObject() *v2.ObjectIdentifier {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *CheckPermissionRequest) GetTrace() bool {
	if x != nil {
		return x.Trace
	}
	return false
}

type CheckPermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// check result
	Check bool `protobuf:"varint,1,opt,name=check,proto3" json:"check,omitempty"`
	// trace information
	Trace []string `protobuf:"bytes,2,rep,name=trace,proto3" json:"trace,omitempty"`
}

func (x *CheckPermissionResponse) Reset() {
	*x = CheckPermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionResponse) ProtoMessage() {}

func (x *CheckPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionResponse.ProtoReflect.Descriptor instead.
func (*CheckPermissionResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{23}
}

func (x *CheckPermissionResponse) GetCheck() bool {
	if x != nil {
		return x.Check
	}
	return false
}

func (x *CheckPermissionResponse) GetTrace() []string {
	if x != nil {
		return x.Trace
	}
	return nil
}

type CheckRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// subject selector
	Subject *v2.ObjectIdentifier `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	// relation selector
	Relation *v2.RelationTypeIdentifier `protobuf:"bytes,2,opt,name=relation,proto3" json:"relation,omitempty"`
	// object selector
	Object *v2.ObjectIdentifier `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	// collect trace information
	Trace bool `protobuf:"varint,7,opt,name=trace,proto3" json:"trace,omitempty"`
}

func (x *CheckRelationRequest) Reset() {
	*x = CheckRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRelationRequest) ProtoMessage() {}

func (x *CheckRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRelationRequest.ProtoReflect.Descriptor instead.
func (*CheckRelationRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{24}
}

func (x *CheckRelationRequest) GetSubject() *v2.ObjectIdentifier {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *CheckRelationRequest) GetRelation() *v2.RelationTypeIdentifier {
	if x != nil {
		return x.Relation
	}
	return nil
}

func (x *CheckRelationRequest) GetObject() *v2.ObjectIdentifier {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *CheckRelationRequest) GetTrace() bool {
	if x != nil {
		return x.Trace
	}
	return false
}

type CheckRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// check result
	Check bool `protobuf:"varint,1,opt,name=check,proto3" json:"check,omitempty"`
	// trace information
	Trace []string `protobuf:"bytes,2,rep,name=trace,proto3" json:"trace,omitempty"`
}

func (x *CheckRelationResponse) Reset() {
	*x = CheckRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRelationResponse) ProtoMessage() {}

func (x *CheckRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRelationResponse.ProtoReflect.Descriptor instead.
func (*CheckRelationResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{25}
}

func (x *CheckRelationResponse) GetCheck() bool {
	if x != nil {
		return x.Check
	}
	return false
}

func (x *CheckRelationResponse) GetTrace() []string {
	if x != nil {
		return x.Trace
	}
	return nil
}

type CheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// check result
	Check bool `protobuf:"varint,1,opt,name=check,proto3" json:"check,omitempty"`
	// trace information
	Trace []string `protobuf:"bytes,2,rep,name=trace,proto3" json:"trace,omitempty"`
}

func (x *CheckResponse) Reset() {
	*x = CheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResponse) ProtoMessage() {}

func (x *CheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResponse.ProtoReflect.Descriptor instead.
func (*CheckResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{26}
}

func (x *CheckResponse) GetCheck() bool {
	if x != nil {
		return x.Check
	}
	return false
}

func (x *CheckResponse) GetTrace() []string {
	if x != nil {
		return x.Trace
	}
	return nil
}

type GetGraphRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anchor selector
	Anchor *v2.ObjectIdentifier `protobuf:"bytes,1,opt,name=anchor,proto3" json:"anchor,omitempty"`
	// subject selector
	Subject *v2.ObjectIdentifier `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	// relation selector
	Relation *v2.RelationTypeIdentifier `protobuf:"bytes,3,opt,name=relation,proto3" json:"relation,omitempty"`
	// object selector
	Object *v2.ObjectIdentifier `protobuf:"bytes,4,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *GetGraphRequest) Reset() {
	*x = GetGraphRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGraphRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGraphRequest) ProtoMessage() {}

func (x *GetGraphRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGraphRequest.ProtoReflect.Descriptor instead.
func (*GetGraphRequest) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{27}
}

func (x *GetGraphRequest) GetAnchor() *v2.ObjectIdentifier {
	if x != nil {
		return x.Anchor
	}
	return nil
}

func (x *GetGraphRequest) GetSubject() *v2.ObjectIdentifier {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *GetGraphRequest) GetRelation() *v2.RelationTypeIdentifier {
	if x != nil {
		return x.Relation
	}
	return nil
}

func (x *GetGraphRequest) GetObject() *v2.ObjectIdentifier {
	if x != nil {
		return x.Object
	}
	return nil
}

type GetGraphResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// dependency graph
	Results []*v2.ObjectDependency `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *GetGraphResponse) Reset() {
	*x = GetGraphResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGraphResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGraphResponse) ProtoMessage() {}

func (x *GetGraphResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_directory_reader_v2_reader_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGraphResponse.ProtoReflect.Descriptor instead.
func (*GetGraphResponse) Descriptor() ([]byte, []int) {
	return file_aserto_directory_reader_v2_reader_proto_rawDescGZIP(), []int{28}
}

func (x *GetGraphResponse) GetResults() []*v2.ObjectDependency {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_aserto_directory_reader_v2_reader_proto protoreflect.FileDescriptor

var file_aserto_directory_reader_v2_reader_proto_rawDesc = []byte{
	0x0a, 0x27, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2f, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x32, 0x2f, 0x72, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x61, 0x73, 0x65, 0x72, 0x74,
	0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x1a, 0x27, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2f, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76,
	0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5e,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x57,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x41, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x42, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x22, 0x62, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x5b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x46, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x41, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xa2, 0x01, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x73, 0x65,
	0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x42, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x73,
	0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0xd8, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2a, 0x0a, 0x0e, 0x77, 0x69,
	0x74, 0x68, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x77, 0x69,
	0x74, 0x68, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xf7, 0x01, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x42,
	0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x42, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x4a, 0x04, 0x08, 0x03,
	0x10, 0x04, 0x52, 0x08, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6f, 0x75,
	0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x22, 0x5a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x22, 0x55, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d,
	0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61,
	0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x46, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x41, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3c, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x42, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x73, 0x65, 0x72,
	0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x26, 0x0a, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x77, 0x69, 0x74,
	0x68, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x8d, 0x02, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x56, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x1a, 0x5e, 0x0a, 0x0c, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x73, 0x65,
	0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9e, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x44, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x41, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x5e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x46, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x57, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x5a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x9e, 0x01, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74,
	0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x8e, 0x02,
	0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x73, 0x65, 0x72,
	0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x50, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x22, 0x45,
	0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x22, 0x8a, 0x02, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x4e, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74,
	0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x08, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x22, 0x43, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x22, 0x3b, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x22, 0xb5, 0x02, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x06, 0x61, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74,
	0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x12, 0x46,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x4e, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74,
	0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x08, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x5a, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x32, 0x86, 0x0d, 0x0a, 0x06, 0x52, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x76, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x31, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x2e, 0x61, 0x73, 0x65, 0x72,
	0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x33, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74,
	0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74,
	0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x31, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2c, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x30, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x61,
	0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x2d, 0x2e, 0x61, 0x73, 0x65,
	0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x73, 0x65, 0x72,
	0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x61, 0x73, 0x65,
	0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x61, 0x73, 0x65,
	0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x2e,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7c, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x73, 0x65, 0x72,
	0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x76, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x30, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x12, 0x2b, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x67, 0x6f, 0x2d, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2f, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2f,
	0x76, 0x32, 0x3b, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_aserto_directory_reader_v2_reader_proto_rawDescOnce sync.Once
	file_aserto_directory_reader_v2_reader_proto_rawDescData = file_aserto_directory_reader_v2_reader_proto_rawDesc
)

func file_aserto_directory_reader_v2_reader_proto_rawDescGZIP() []byte {
	file_aserto_directory_reader_v2_reader_proto_rawDescOnce.Do(func() {
		file_aserto_directory_reader_v2_reader_proto_rawDescData = protoimpl.X.CompressGZIP(file_aserto_directory_reader_v2_reader_proto_rawDescData)
	})
	return file_aserto_directory_reader_v2_reader_proto_rawDescData
}

var file_aserto_directory_reader_v2_reader_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_aserto_directory_reader_v2_reader_proto_goTypes = []interface{}{
	(*GetObjectTypeRequest)(nil),      // 0: aserto.directory.reader.v2.GetObjectTypeRequest
	(*GetObjectTypeResponse)(nil),     // 1: aserto.directory.reader.v2.GetObjectTypeResponse
	(*GetObjectTypesRequest)(nil),     // 2: aserto.directory.reader.v2.GetObjectTypesRequest
	(*GetObjectTypesResponse)(nil),    // 3: aserto.directory.reader.v2.GetObjectTypesResponse
	(*GetRelationTypeRequest)(nil),    // 4: aserto.directory.reader.v2.GetRelationTypeRequest
	(*GetRelationTypeResponse)(nil),   // 5: aserto.directory.reader.v2.GetRelationTypeResponse
	(*GetRelationTypesRequest)(nil),   // 6: aserto.directory.reader.v2.GetRelationTypesRequest
	(*GetRelationTypesResponse)(nil),  // 7: aserto.directory.reader.v2.GetRelationTypesResponse
	(*GetObjectRequest)(nil),          // 8: aserto.directory.reader.v2.GetObjectRequest
	(*GetObjectResponse)(nil),         // 9: aserto.directory.reader.v2.GetObjectResponse
	(*GetObjectManyRequest)(nil),      // 10: aserto.directory.reader.v2.GetObjectManyRequest
	(*GetObjectManyResponse)(nil),     // 11: aserto.directory.reader.v2.GetObjectManyResponse
	(*GetObjectsRequest)(nil),         // 12: aserto.directory.reader.v2.GetObjectsRequest
	(*GetObjectsResponse)(nil),        // 13: aserto.directory.reader.v2.GetObjectsResponse
	(*GetRelationRequest)(nil),        // 14: aserto.directory.reader.v2.GetRelationRequest
	(*GetRelationResponse)(nil),       // 15: aserto.directory.reader.v2.GetRelationResponse
	(*GetRelationsRequest)(nil),       // 16: aserto.directory.reader.v2.GetRelationsRequest
	(*GetRelationsResponse)(nil),      // 17: aserto.directory.reader.v2.GetRelationsResponse
	(*GetPermissionRequest)(nil),      // 18: aserto.directory.reader.v2.GetPermissionRequest
	(*GetPermissionResponse)(nil),     // 19: aserto.directory.reader.v2.GetPermissionResponse
	(*GetPermissionsRequest)(nil),     // 20: aserto.directory.reader.v2.GetPermissionsRequest
	(*GetPermissionsResponse)(nil),    // 21: aserto.directory.reader.v2.GetPermissionsResponse
	(*CheckPermissionRequest)(nil),    // 22: aserto.directory.reader.v2.CheckPermissionRequest
	(*CheckPermissionResponse)(nil),   // 23: aserto.directory.reader.v2.CheckPermissionResponse
	(*CheckRelationRequest)(nil),      // 24: aserto.directory.reader.v2.CheckRelationRequest
	(*CheckRelationResponse)(nil),     // 25: aserto.directory.reader.v2.CheckRelationResponse
	(*CheckResponse)(nil),             // 26: aserto.directory.reader.v2.CheckResponse
	(*GetGraphRequest)(nil),           // 27: aserto.directory.reader.v2.GetGraphRequest
	(*GetGraphResponse)(nil),          // 28: aserto.directory.reader.v2.GetGraphResponse
	nil,                               // 29: aserto.directory.reader.v2.GetRelationResponse.ObjectsEntry
	(*v2.ObjectTypeIdentifier)(nil),   // 30: aserto.directory.common.v2.ObjectTypeIdentifier
	(*v2.ObjectType)(nil),             // 31: aserto.directory.common.v2.ObjectType
	(*v2.PaginationRequest)(nil),      // 32: aserto.directory.common.v2.PaginationRequest
	(*v2.PaginationResponse)(nil),     // 33: aserto.directory.common.v2.PaginationResponse
	(*v2.RelationTypeIdentifier)(nil), // 34: aserto.directory.common.v2.RelationTypeIdentifier
	(*v2.RelationType)(nil),           // 35: aserto.directory.common.v2.RelationType
	(*v2.ObjectIdentifier)(nil),       // 36: aserto.directory.common.v2.ObjectIdentifier
	(*v2.Object)(nil),                 // 37: aserto.directory.common.v2.Object
	(*v2.Relation)(nil),               // 38: aserto.directory.common.v2.Relation
	(*v2.RelationIdentifier)(nil),     // 39: aserto.directory.common.v2.RelationIdentifier
	(*v2.PermissionIdentifier)(nil),   // 40: aserto.directory.common.v2.PermissionIdentifier
	(*v2.Permission)(nil),             // 41: aserto.directory.common.v2.Permission
	(*v2.ObjectDependency)(nil),       // 42: aserto.directory.common.v2.ObjectDependency
}
var file_aserto_directory_reader_v2_reader_proto_depIdxs = []int32{
	30, // 0: aserto.directory.reader.v2.GetObjectTypeRequest.param:type_name -> aserto.directory.common.v2.ObjectTypeIdentifier
	31, // 1: aserto.directory.reader.v2.GetObjectTypeResponse.result:type_name -> aserto.directory.common.v2.ObjectType
	32, // 2: aserto.directory.reader.v2.GetObjectTypesRequest.page:type_name -> aserto.directory.common.v2.PaginationRequest
	31, // 3: aserto.directory.reader.v2.GetObjectTypesResponse.results:type_name -> aserto.directory.common.v2.ObjectType
	33, // 4: aserto.directory.reader.v2.GetObjectTypesResponse.page:type_name -> aserto.directory.common.v2.PaginationResponse
	34, // 5: aserto.directory.reader.v2.GetRelationTypeRequest.param:type_name -> aserto.directory.common.v2.RelationTypeIdentifier
	35, // 6: aserto.directory.reader.v2.GetRelationTypeResponse.result:type_name -> aserto.directory.common.v2.RelationType
	30, // 7: aserto.directory.reader.v2.GetRelationTypesRequest.param:type_name -> aserto.directory.common.v2.ObjectTypeIdentifier
	32, // 8: aserto.directory.reader.v2.GetRelationTypesRequest.page:type_name -> aserto.directory.common.v2.PaginationRequest
	35, // 9: aserto.directory.reader.v2.GetRelationTypesResponse.results:type_name -> aserto.directory.common.v2.RelationType
	33, // 10: aserto.directory.reader.v2.GetRelationTypesResponse.page:type_name -> aserto.directory.common.v2.PaginationResponse
	36, // 11: aserto.directory.reader.v2.GetObjectRequest.param:type_name -> aserto.directory.common.v2.ObjectIdentifier
	32, // 12: aserto.directory.reader.v2.GetObjectRequest.page:type_name -> aserto.directory.common.v2.PaginationRequest
	37, // 13: aserto.directory.reader.v2.GetObjectResponse.result:type_name -> aserto.directory.common.v2.Object
	38, // 14: aserto.directory.reader.v2.GetObjectResponse.relations:type_name -> aserto.directory.common.v2.Relation
	33, // 15: aserto.directory.reader.v2.GetObjectResponse.page:type_name -> aserto.directory.common.v2.PaginationResponse
	36, // 16: aserto.directory.reader.v2.GetObjectManyRequest.param:type_name -> aserto.directory.common.v2.ObjectIdentifier
	37, // 17: aserto.directory.reader.v2.GetObjectManyResponse.results:type_name -> aserto.directory.common.v2.Object
	30, // 18: aserto.directory.reader.v2.GetObjectsRequest.param:type_name -> aserto.directory.common.v2.ObjectTypeIdentifier
	32, // 19: aserto.directory.reader.v2.GetObjectsRequest.page:type_name -> aserto.directory.common.v2.PaginationRequest
	37, // 20: aserto.directory.reader.v2.GetObjectsResponse.results:type_name -> aserto.directory.common.v2.Object
	33, // 21: aserto.directory.reader.v2.GetObjectsResponse.page:type_name -> aserto.directory.common.v2.PaginationResponse
	39, // 22: aserto.directory.reader.v2.GetRelationRequest.param:type_name -> aserto.directory.common.v2.RelationIdentifier
	38, // 23: aserto.directory.reader.v2.GetRelationResponse.results:type_name -> aserto.directory.common.v2.Relation
	29, // 24: aserto.directory.reader.v2.GetRelationResponse.objects:type_name -> aserto.directory.reader.v2.GetRelationResponse.ObjectsEntry
	39, // 25: aserto.directory.reader.v2.GetRelationsRequest.param:type_name -> aserto.directory.common.v2.RelationIdentifier
	32, // 26: aserto.directory.reader.v2.GetRelationsRequest.page:type_name -> aserto.directory.common.v2.PaginationRequest
	38, // 27: aserto.directory.reader.v2.GetRelationsResponse.results:type_name -> aserto.directory.common.v2.Relation
	33, // 28: aserto.directory.reader.v2.GetRelationsResponse.page:type_name -> aserto.directory.common.v2.PaginationResponse
	40, // 29: aserto.directory.reader.v2.GetPermissionRequest.param:type_name -> aserto.directory.common.v2.PermissionIdentifier
	41, // 30: aserto.directory.reader.v2.GetPermissionResponse.result:type_name -> aserto.directory.common.v2.Permission
	32, // 31: aserto.directory.reader.v2.GetPermissionsRequest.page:type_name -> aserto.directory.common.v2.PaginationRequest
	41, // 32: aserto.directory.reader.v2.GetPermissionsResponse.results:type_name -> aserto.directory.common.v2.Permission
	33, // 33: aserto.directory.reader.v2.GetPermissionsResponse.page:type_name -> aserto.directory.common.v2.PaginationResponse
	36, // 34: aserto.directory.reader.v2.CheckPermissionRequest.subject:type_name -> aserto.directory.common.v2.ObjectIdentifier
	40, // 35: aserto.directory.reader.v2.CheckPermissionRequest.permission:type_name -> aserto.directory.common.v2.PermissionIdentifier
	36, // 36: aserto.directory.reader.v2.CheckPermissionRequest.object:type_name -> aserto.directory.common.v2.ObjectIdentifier
	36, // 37: aserto.directory.reader.v2.CheckRelationRequest.subject:type_name -> aserto.directory.common.v2.ObjectIdentifier
	34, // 38: aserto.directory.reader.v2.CheckRelationRequest.relation:type_name -> aserto.directory.common.v2.RelationTypeIdentifier
	36, // 39: aserto.directory.reader.v2.CheckRelationRequest.object:type_name -> aserto.directory.common.v2.ObjectIdentifier
	36, // 40: aserto.directory.reader.v2.GetGraphRequest.anchor:type_name -> aserto.directory.common.v2.ObjectIdentifier
	36, // 41: aserto.directory.reader.v2.GetGraphRequest.subject:type_name -> aserto.directory.common.v2.ObjectIdentifier
	34, // 42: aserto.directory.reader.v2.GetGraphRequest.relation:type_name -> aserto.directory.common.v2.RelationTypeIdentifier
	36, // 43: aserto.directory.reader.v2.GetGraphRequest.object:type_name -> aserto.directory.common.v2.ObjectIdentifier
	42, // 44: aserto.directory.reader.v2.GetGraphResponse.results:type_name -> aserto.directory.common.v2.ObjectDependency
	37, // 45: aserto.directory.reader.v2.GetRelationResponse.ObjectsEntry.value:type_name -> aserto.directory.common.v2.Object
	0,  // 46: aserto.directory.reader.v2.Reader.GetObjectType:input_type -> aserto.directory.reader.v2.GetObjectTypeRequest
	2,  // 47: aserto.directory.reader.v2.Reader.GetObjectTypes:input_type -> aserto.directory.reader.v2.GetObjectTypesRequest
	4,  // 48: aserto.directory.reader.v2.Reader.GetRelationType:input_type -> aserto.directory.reader.v2.GetRelationTypeRequest
	6,  // 49: aserto.directory.reader.v2.Reader.GetRelationTypes:input_type -> aserto.directory.reader.v2.GetRelationTypesRequest
	18, // 50: aserto.directory.reader.v2.Reader.GetPermission:input_type -> aserto.directory.reader.v2.GetPermissionRequest
	20, // 51: aserto.directory.reader.v2.Reader.GetPermissions:input_type -> aserto.directory.reader.v2.GetPermissionsRequest
	8,  // 52: aserto.directory.reader.v2.Reader.GetObject:input_type -> aserto.directory.reader.v2.GetObjectRequest
	10, // 53: aserto.directory.reader.v2.Reader.GetObjectMany:input_type -> aserto.directory.reader.v2.GetObjectManyRequest
	12, // 54: aserto.directory.reader.v2.Reader.GetObjects:input_type -> aserto.directory.reader.v2.GetObjectsRequest
	14, // 55: aserto.directory.reader.v2.Reader.GetRelation:input_type -> aserto.directory.reader.v2.GetRelationRequest
	16, // 56: aserto.directory.reader.v2.Reader.GetRelations:input_type -> aserto.directory.reader.v2.GetRelationsRequest
	22, // 57: aserto.directory.reader.v2.Reader.CheckPermission:input_type -> aserto.directory.reader.v2.CheckPermissionRequest
	24, // 58: aserto.directory.reader.v2.Reader.CheckRelation:input_type -> aserto.directory.reader.v2.CheckRelationRequest
	27, // 59: aserto.directory.reader.v2.Reader.GetGraph:input_type -> aserto.directory.reader.v2.GetGraphRequest
	1,  // 60: aserto.directory.reader.v2.Reader.GetObjectType:output_type -> aserto.directory.reader.v2.GetObjectTypeResponse
	3,  // 61: aserto.directory.reader.v2.Reader.GetObjectTypes:output_type -> aserto.directory.reader.v2.GetObjectTypesResponse
	5,  // 62: aserto.directory.reader.v2.Reader.GetRelationType:output_type -> aserto.directory.reader.v2.GetRelationTypeResponse
	7,  // 63: aserto.directory.reader.v2.Reader.GetRelationTypes:output_type -> aserto.directory.reader.v2.GetRelationTypesResponse
	19, // 64: aserto.directory.reader.v2.Reader.GetPermission:output_type -> aserto.directory.reader.v2.GetPermissionResponse
	21, // 65: aserto.directory.reader.v2.Reader.GetPermissions:output_type -> aserto.directory.reader.v2.GetPermissionsResponse
	9,  // 66: aserto.directory.reader.v2.Reader.GetObject:output_type -> aserto.directory.reader.v2.GetObjectResponse
	11, // 67: aserto.directory.reader.v2.Reader.GetObjectMany:output_type -> aserto.directory.reader.v2.GetObjectManyResponse
	13, // 68: aserto.directory.reader.v2.Reader.GetObjects:output_type -> aserto.directory.reader.v2.GetObjectsResponse
	15, // 69: aserto.directory.reader.v2.Reader.GetRelation:output_type -> aserto.directory.reader.v2.GetRelationResponse
	17, // 70: aserto.directory.reader.v2.Reader.GetRelations:output_type -> aserto.directory.reader.v2.GetRelationsResponse
	23, // 71: aserto.directory.reader.v2.Reader.CheckPermission:output_type -> aserto.directory.reader.v2.CheckPermissionResponse
	25, // 72: aserto.directory.reader.v2.Reader.CheckRelation:output_type -> aserto.directory.reader.v2.CheckRelationResponse
	28, // 73: aserto.directory.reader.v2.Reader.GetGraph:output_type -> aserto.directory.reader.v2.GetGraphResponse
	60, // [60:74] is the sub-list for method output_type
	46, // [46:60] is the sub-list for method input_type
	46, // [46:46] is the sub-list for extension type_name
	46, // [46:46] is the sub-list for extension extendee
	0,  // [0:46] is the sub-list for field type_name
}

func init() { file_aserto_directory_reader_v2_reader_proto_init() }
func file_aserto_directory_reader_v2_reader_proto_init() {
	if File_aserto_directory_reader_v2_reader_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aserto_directory_reader_v2_reader_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelationTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelationTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelationTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelationTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectManyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectManyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGraphRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_directory_reader_v2_reader_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGraphResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_aserto_directory_reader_v2_reader_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_aserto_directory_reader_v2_reader_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aserto_directory_reader_v2_reader_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aserto_directory_reader_v2_reader_proto_goTypes,
		DependencyIndexes: file_aserto_directory_reader_v2_reader_proto_depIdxs,
		MessageInfos:      file_aserto_directory_reader_v2_reader_proto_msgTypes,
	}.Build()
	File_aserto_directory_reader_v2_reader_proto = out.File
	file_aserto_directory_reader_v2_reader_proto_rawDesc = nil
	file_aserto_directory_reader_v2_reader_proto_goTypes = nil
	file_aserto_directory_reader_v2_reader_proto_depIdxs = nil
}
